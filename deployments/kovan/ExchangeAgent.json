{
  "address": "0xC3aee90478d1C11Af6E721DBfaDbb2028Fe6cf28",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDC_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UNISWAP_FACTORY",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TWAP_ORACLE_PRICE_FEED_FACTORY",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "AddAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "AddGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "RemoveAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "RemoveGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "UpdateSlippage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAsset",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TWAP_ORACLE_PRICE_FEED_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "removeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4436daab5c639ace2a6fe9658e815df2570e9078578736878b52110a3c2df492",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xC3aee90478d1C11Af6E721DBfaDbb2028Fe6cf28",
    "transactionIndex": 0,
    "gasUsed": "1395227",
    "logsBloom": "0x00000000000000000000000000000000040000000000000000800000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000002000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000400000",
    "blockHash": "0x7aff17d936134f97ef5bb27b65a242cef92d10fcdcaaf87d06430734e43918a5",
    "transactionHash": "0x4436daab5c639ace2a6fe9658e815df2570e9078578736878b52110a3c2df492",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28596974,
        "transactionHash": "0x4436daab5c639ace2a6fe9658e815df2570e9078578736878b52110a3c2df492",
        "address": "0xC3aee90478d1C11Af6E721DBfaDbb2028Fe6cf28",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005569bdf4e02cec3fe459796e3d0e741616029fa4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x7aff17d936134f97ef5bb27b65a242cef92d10fcdcaaf87d06430734e43918a5"
      }
    ],
    "blockNumber": 28596974,
    "cumulativeGasUsed": "1395227",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FED7f0b36374B8Ee25177b3cbE21B6c8E079F4E",
    "0xd0a1e359811322d97991e03f863a0c30c2cf029c",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "0x08851c9fAa2b1a96097618aD5C7bd6aF781a5ba7"
  ],
  "solcInputHash": "5fddee9b7a27582a4c6c6324d1fe336a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UNISWAP_FACTORY\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TWAP_ORACLE_PRICE_FEED_FACTORY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"AddAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"AddGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"RemoveAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"RemoveGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"UpdateSlippage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAsset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TWAP_ORACLE_PRICE_FEED_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This smart contract is for getting CVR_ETH, CVR_USDT price\",\"kind\":\"dev\",\"methods\":{\"getNeededTokenAmount(address,address,uint256)\":{\"details\":\"Get needed _token0 amount for _desiredAmount of _token1\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapTokenWithETH(address,uint256)\":{\"params\":{\"_amount\":\": this one is the value with decimals\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./libs/TransferHelper.sol\\\";\\nimport {IUniswapV2Pair} from \\\"./interfaces/IUniswapV2Pair.sol\\\";\\nimport {IUniswapV2Factory} from \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeedFactory.sol\\\";\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\n\\n/**\\n * @dev This smart contract is for getting CVR_ETH, CVR_USDT price\\n */\\ncontract ExchangeAgent is Ownable, IExchangeAgent, ReentrancyGuard {\\n    event AddGateway(address _sender, address _gateway);\\n    event RemoveGateway(address _sender, address _gateway);\\n    event AddAvailableCurrency(address _sender, address _currency);\\n    event RemoveAvailableCurrency(address _sender, address _currency);\\n    event UpdateSlippage(address _sender, uint256 _slippage);\\n    event WithdrawAsset(address _user, address _to, address _token, uint256 _amount);\\n\\n    mapping(address => bool) public whiteList; // white listed polka gateways\\n    // available currencies in Polkacover, token => pair\\n    // for now we allow CVR\\n    mapping(address => bool) public availableCurrencies;\\n\\n    address public immutable USDC_ADDRESS;\\n    address public immutable WETH;\\n    address public immutable UNISWAP_FACTORY;\\n    address public immutable TWAP_ORACLE_PRICE_FEED_FACTORY;\\n\\n    constructor(\\n        address _USDC_ADDRESS,\\n        address _WETH,\\n        address _UNISWAP_FACTORY,\\n        address _TWAP_ORACLE_PRICE_FEED_FACTORY\\n    ) {\\n        USDC_ADDRESS = _USDC_ADDRESS;\\n        WETH = _WETH;\\n        UNISWAP_FACTORY = _UNISWAP_FACTORY;\\n        TWAP_ORACLE_PRICE_FEED_FACTORY = _TWAP_ORACLE_PRICE_FEED_FACTORY;\\n    }\\n\\n    receive() external payable {}\\n\\n    modifier onlyWhiteListed(address _gateway) {\\n        require(whiteList[_gateway], \\\"Only white listed addresses are acceptable\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     * _desiredAmount should consider decimals based on _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\n            _token0,\\n            _token1\\n        );\\n\\n        uint256 neededAmount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token1, _desiredAmount);\\n\\n        return neededAmount;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     */\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _desiredAmount);\\n    }\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(WETH, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _desiredAmount);\\n    }\\n\\n    /**\\n     * @param _amount: this one is the value with decimals\\n     */\\n    function swapTokenWithETH(address _token, uint256 _amount) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        // store CVR in this exchagne contract\\n        // send eth to buy gateway based on the uniswap price\\n        require(availableCurrencies[_token], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token, WETH, _amount);\\n    }\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        require(availableCurrencies[_token0], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token0, _token1, _amount);\\n    }\\n\\n    /**\\n     * @dev exchange _amount of _token0 with _token1 by twap oracle price\\n     * TODO _amount should consider decimals based on _token0\\n     */\\n    function _swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) private {\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\n            _token0,\\n            _token1\\n        );\\n\\n        uint256 swapAmount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token0, _amount);\\n        require(swapAmount <= address(this).balance, \\\"Insufficient ETH balance\\\");\\n\\n        TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _amount);\\n\\n        if (_token1 == WETH) {\\n            TransferHelper.safeTransferETH(msg.sender, swapAmount);\\n        } else {\\n            TransferHelper.safeTransfer(_token1, msg.sender, swapAmount);\\n        }\\n    }\\n\\n    function addWhiteList(address _gateway) external onlyOwner {\\n        require(!whiteList[_gateway], \\\"Already white listed\\\");\\n        whiteList[_gateway] = true;\\n        emit AddGateway(msg.sender, _gateway);\\n    }\\n\\n    function removeWhiteList(address _gateway) external onlyOwner {\\n        require(whiteList[_gateway], \\\"Not white listed\\\");\\n        whiteList[_gateway] = false;\\n        emit RemoveGateway(msg.sender, _gateway);\\n    }\\n\\n    function addCurrency(address _currency) external onlyOwner {\\n        require(!availableCurrencies[_currency], \\\"Already available\\\");\\n        availableCurrencies[_currency] = true;\\n        emit AddAvailableCurrency(msg.sender, _currency);\\n    }\\n\\n    function removeCurrency(address _currency) external onlyOwner {\\n        require(availableCurrencies[_currency], \\\"Not available yet\\\");\\n        availableCurrencies[_currency] = false;\\n        emit RemoveAvailableCurrency(msg.sender, _currency);\\n    }\\n\\n    function withdrawAsset(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        if (_token == address(0)) {\\n            TransferHelper.safeTransferETH(_to, _amount);\\n        } else {\\n            TransferHelper.safeTransfer(_token, _to, _amount);\\n        }\\n        emit WithdrawAsset(owner(), _to, _token, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x106eb12430003da57c43c048e7a3e84b6421b99addbba0512d105c9bf55c3d3e\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\ninterface IExchangeAgent {\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external returns (uint256);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function swapTokenWithETH(address _token, uint256 _amount) external;\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6b3a247450082bf7e12ca27c13685885e56e396192d91ddd24820f9e6562cd6a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function update() external;\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x93c07be9b8250abbe953aa68574a82e0e58e4a6330e190785d8a95e0762a8752\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeedFactory {\\n    function twapOraclePriceFeedList(address _pair) external view returns (address);\\n\\n    function getTwapOraclePriceFeed(address _token0, address _token1) external view returns (address twapOraclePriceFeed);\\n}\\n\",\"keccak256\":\"0xa476375c4fb24d5ee56dfdd8a9059530e2678be1d5a0070c129919c9e9932898\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\ninterface IUniswapV2Factory {\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x6e5250dccf1ed00969b6f3b3616bbd50744d62d0fcd7a024c0e03ebc765b4794\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Pair {\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n}\\n\",\"keccak256\":\"0xca87cafa76fac381b9df7c9b68274f869ef4c76296d754b01bd998b889428f3f\",\"license\":\"MIT\"},\"contracts/libs/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2005ff7c65cd1282b2b470ea7b11782c9abaae62fbeacd100b8840d653c5f8e6\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162001933380380620019338339810160408190526200003591620000ee565b62000049620000436200007d565b62000081565b600180556001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e0526200014a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e957600080fd5b919050565b6000806000806080858703121562000104578384fd5b6200010f85620000d1565b93506200011f60208601620000d1565b92506200012f60408601620000d1565b91506200013f60608601620000d1565b905092959194509250565b60805160601c60a05160601c60c05160601c60e05160601c611764620001cf6000396000818161084e01528181610daa0152610ed80152600081816109e40152610ccc01526000818161057201528181610742015281816108a6015281816108d001526110110152600081816105930152818161087801526108f701526117646000f3fe6080604052600436106101235760003560e01c80638da5cb5b116100a0578063bb09d9b711610064578063bb09d9b714610315578063c5d3a1071461032a578063c74c0fac1461034a578063e7cd4a041461035f578063f2fde38b1461037f5761012a565b80638da5cb5b1461028957806390600a31146102ab578063a9a12d43146102c0578063ad5c4648146102e0578063ba560ed9146102f55761012a565b8063531a2211116100e7578063531a2211146101f45780636e85a5ab14610214578063715018a61461023457806378cb7171146102495780638ab234b6146102695761012a565b8063092ae4dc1461012f5780631af42c0f146101515780632042e5c21461018757806334899be6146101a7578063372c12b1146101d45761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061014f61014a3660046111e8565b61039f565b005b34801561015d57600080fd5b5061017161016c3660046111b0565b610458565b60405161017e9190611371565b60405180910390f35b34801561019357600080fd5b5061014f6101a23660046111b0565b61046d565b3480156101b357600080fd5b506101c76101c23660046111e8565b610541565b60405161017e9190611710565b3480156101e057600080fd5b506101716101ef3660046111b0565b610556565b34801561020057600080fd5b506101c761020f366004611273565b61056b565b34801561022057600080fd5b5061014f61022f3660046111e8565b6105be565b34801561024057600080fd5b5061014f610662565b34801561025557600080fd5b5061014f610264366004611228565b6106ad565b34801561027557600080fd5b5061014f6102843660046111b0565b610770565b34801561029557600080fd5b5061029e61083d565b60405161017e91906112dc565b3480156102b757600080fd5b5061029e61084c565b3480156102cc57600080fd5b506101c76102db366004611228565b610870565b3480156102ec57600080fd5b5061029e6108a4565b34801561030157600080fd5b506101c7610310366004611228565b6108c8565b34801561032157600080fd5b5061029e6108f5565b34801561033657600080fd5b5061014f6103453660046111b0565b610919565b34801561035657600080fd5b5061029e6109e2565b34801561036b57600080fd5b5061014f61037a3660046111b0565b610a06565b34801561038b57600080fd5b5061014f61039a3660046111b0565b610ad3565b6103a7610b44565b6001600160a01b03166103b861083d565b6001600160a01b0316146103e75760405162461bcd60e51b81526004016103de90611558565b60405180910390fd5b6001600160a01b038216610404576103ff8382610b48565b61040f565b61040f828483610bda565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461043861083d565b84848460405161044b949392919061130a565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610475610b44565b6001600160a01b031661048661083d565b6001600160a01b0316146104ac5760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526002602052604090205460ff166104e45760405162461bcd60e51b81526004016103de906115c4565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe9061053690339084906112f0565b60405180910390a150565b600061054e848484610cc7565b949350505050565b60026020526000908152604090205460ff1681565b60006105b87f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cc7565b92915050565b3360008181526002602052604090205460ff166105ed5760405162461bcd60e51b81526004016103de906116c6565b600260015414156106105760405162461bcd60e51b81526004016103de9061168f565b60026001556001600160a01b03841660009081526003602052604090205460ff1661064d5760405162461bcd60e51b81526004016103de90611648565b610658848484610ebe565b5050600180555050565b61066a610b44565b6001600160a01b031661067b61083d565b6001600160a01b0316146106a15760405162461bcd60e51b81526004016103de90611558565b6106ab6000611063565b565b3360008181526002602052604090205460ff166106dc5760405162461bcd60e51b81526004016103de906116c6565b600260015414156106ff5760405162461bcd60e51b81526004016103de9061168f565b60026001556001600160a01b03831660009081526003602052604090205460ff1661073c5760405162461bcd60e51b81526004016103de90611648565b610767837f000000000000000000000000000000000000000000000000000000000000000084610ebe565b50506001805550565b610778610b44565b6001600160a01b031661078961083d565b6001600160a01b0316146107af5760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526003602052604090205460ff16156107e85760405162461bcd60e51b81526004016103de9061147c565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d989061053690339084906112f0565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061089d837f000000000000000000000000000000000000000000000000000000000000000084610cc7565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061089d837f000000000000000000000000000000000000000000000000000000000000000084610cc7565b7f000000000000000000000000000000000000000000000000000000000000000081565b610921610b44565b6001600160a01b031661093261083d565b6001600160a01b0316146109585760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526003602052604090205460ff166109905760405162461bcd60e51b81526004016103de9061158d565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b9061053690339084906112f0565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a0e610b44565b6001600160a01b0316610a1f61083d565b6001600160a01b031614610a455760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526002602052604090205460ff1615610a7e5760405162461bcd60e51b81526004016103de906114ea565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e9061053690339084906112f0565b610adb610b44565b6001600160a01b0316610aec61083d565b6001600160a01b031614610b125760405162461bcd60e51b81526004016103de90611558565b6001600160a01b038116610b385760405162461bcd60e51b81526004016103de9061137c565b610b4181611063565b50565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610b7291906112a3565b60006040518083038185875af1925050503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b5050905080610bd55760405162461bcd60e51b81526004016103de9061141f565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610bff929190611358565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610c3891906112a3565b6000604051808303816000865af19150503d8060008114610c75576040519150601f19603f3d011682016040523d82523d6000602084013e610c7a565b606091505b5091509150818015610ca4575080511580610ca4575080806020019051810190610ca49190611253565b610cc05760405162461bcd60e51b81526004016103de906115fb565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610d189291906112f0565b60206040518083038186803b158015610d3057600080fd5b505afa158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6891906111cc565b90506001600160a01b038116610d905760405162461bcd60e51b81526004016103de906114b3565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610de190899089906004016112f0565b60206040518083038186803b158015610df957600080fd5b505afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906111cc565b90506000816001600160a01b0316633ddac95387876040518363ffffffff1660e01b8152600401610e63929190611358565b60206040518083038186803b158015610e7b57600080fd5b505afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb3919061128b565b979650505050505050565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610f0f90879087906004016112f0565b60206040518083038186803b158015610f2757600080fd5b505afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906111cc565b90506000816001600160a01b0316633ddac95386856040518363ffffffff1660e01b8152600401610f91929190611358565b60206040518083038186803b158015610fa957600080fd5b505afa158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe1919061128b565b9050478111156110035760405162461bcd60e51b81526004016103de90611521565b61100f853330866110c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415611058576110533382610b48565b610cc0565b610cc0843383610bda565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080856001600160a01b03166323b872dd8686866040516024016110e793929190611334565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161112091906112a3565b6000604051808303816000865af19150503d806000811461115d576040519150601f19603f3d011682016040523d82523d6000602084013e611162565b606091505b509150915081801561118c57508051158061118c57508080602001905181019061118c9190611253565b6111a85760405162461bcd60e51b81526004016103de906113c2565b505050505050565b6000602082840312156111c1578081fd5b813561089d81611719565b6000602082840312156111dd578081fd5b815161089d81611719565b6000806000606084860312156111fc578182fd5b833561120781611719565b9250602084013561121781611719565b929592945050506040919091013590565b6000806040838503121561123a578182fd5b823561124581611719565b946020939093013593505050565b600060208284031215611264578081fd5b8151801515811461089d578182fd5b600060208284031215611284578081fd5b5035919050565b60006020828403121561129c578081fd5b5051919050565b60008251815b818110156112c357602081860181015185830152016112a9565b818111156112d15782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6001600160a01b0381168114610b4157600080fdfea26469706673582212207e4edf03ec22a0db7f0517a822b7242ffdabe6edf4cf4f95835fb643b835e01164736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101235760003560e01c80638da5cb5b116100a0578063bb09d9b711610064578063bb09d9b714610315578063c5d3a1071461032a578063c74c0fac1461034a578063e7cd4a041461035f578063f2fde38b1461037f5761012a565b80638da5cb5b1461028957806390600a31146102ab578063a9a12d43146102c0578063ad5c4648146102e0578063ba560ed9146102f55761012a565b8063531a2211116100e7578063531a2211146101f45780636e85a5ab14610214578063715018a61461023457806378cb7171146102495780638ab234b6146102695761012a565b8063092ae4dc1461012f5780631af42c0f146101515780632042e5c21461018757806334899be6146101a7578063372c12b1146101d45761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061014f61014a3660046111e8565b61039f565b005b34801561015d57600080fd5b5061017161016c3660046111b0565b610458565b60405161017e9190611371565b60405180910390f35b34801561019357600080fd5b5061014f6101a23660046111b0565b61046d565b3480156101b357600080fd5b506101c76101c23660046111e8565b610541565b60405161017e9190611710565b3480156101e057600080fd5b506101716101ef3660046111b0565b610556565b34801561020057600080fd5b506101c761020f366004611273565b61056b565b34801561022057600080fd5b5061014f61022f3660046111e8565b6105be565b34801561024057600080fd5b5061014f610662565b34801561025557600080fd5b5061014f610264366004611228565b6106ad565b34801561027557600080fd5b5061014f6102843660046111b0565b610770565b34801561029557600080fd5b5061029e61083d565b60405161017e91906112dc565b3480156102b757600080fd5b5061029e61084c565b3480156102cc57600080fd5b506101c76102db366004611228565b610870565b3480156102ec57600080fd5b5061029e6108a4565b34801561030157600080fd5b506101c7610310366004611228565b6108c8565b34801561032157600080fd5b5061029e6108f5565b34801561033657600080fd5b5061014f6103453660046111b0565b610919565b34801561035657600080fd5b5061029e6109e2565b34801561036b57600080fd5b5061014f61037a3660046111b0565b610a06565b34801561038b57600080fd5b5061014f61039a3660046111b0565b610ad3565b6103a7610b44565b6001600160a01b03166103b861083d565b6001600160a01b0316146103e75760405162461bcd60e51b81526004016103de90611558565b60405180910390fd5b6001600160a01b038216610404576103ff8382610b48565b61040f565b61040f828483610bda565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461043861083d565b84848460405161044b949392919061130a565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610475610b44565b6001600160a01b031661048661083d565b6001600160a01b0316146104ac5760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526002602052604090205460ff166104e45760405162461bcd60e51b81526004016103de906115c4565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe9061053690339084906112f0565b60405180910390a150565b600061054e848484610cc7565b949350505050565b60026020526000908152604090205460ff1681565b60006105b87f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610cc7565b92915050565b3360008181526002602052604090205460ff166105ed5760405162461bcd60e51b81526004016103de906116c6565b600260015414156106105760405162461bcd60e51b81526004016103de9061168f565b60026001556001600160a01b03841660009081526003602052604090205460ff1661064d5760405162461bcd60e51b81526004016103de90611648565b610658848484610ebe565b5050600180555050565b61066a610b44565b6001600160a01b031661067b61083d565b6001600160a01b0316146106a15760405162461bcd60e51b81526004016103de90611558565b6106ab6000611063565b565b3360008181526002602052604090205460ff166106dc5760405162461bcd60e51b81526004016103de906116c6565b600260015414156106ff5760405162461bcd60e51b81526004016103de9061168f565b60026001556001600160a01b03831660009081526003602052604090205460ff1661073c5760405162461bcd60e51b81526004016103de90611648565b610767837f000000000000000000000000000000000000000000000000000000000000000084610ebe565b50506001805550565b610778610b44565b6001600160a01b031661078961083d565b6001600160a01b0316146107af5760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526003602052604090205460ff16156107e85760405162461bcd60e51b81526004016103de9061147c565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d989061053690339084906112f0565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061089d837f000000000000000000000000000000000000000000000000000000000000000084610cc7565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061089d837f000000000000000000000000000000000000000000000000000000000000000084610cc7565b7f000000000000000000000000000000000000000000000000000000000000000081565b610921610b44565b6001600160a01b031661093261083d565b6001600160a01b0316146109585760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526003602052604090205460ff166109905760405162461bcd60e51b81526004016103de9061158d565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b9061053690339084906112f0565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a0e610b44565b6001600160a01b0316610a1f61083d565b6001600160a01b031614610a455760405162461bcd60e51b81526004016103de90611558565b6001600160a01b03811660009081526002602052604090205460ff1615610a7e5760405162461bcd60e51b81526004016103de906114ea565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e9061053690339084906112f0565b610adb610b44565b6001600160a01b0316610aec61083d565b6001600160a01b031614610b125760405162461bcd60e51b81526004016103de90611558565b6001600160a01b038116610b385760405162461bcd60e51b81526004016103de9061137c565b610b4181611063565b50565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610b7291906112a3565b60006040518083038185875af1925050503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b5050905080610bd55760405162461bcd60e51b81526004016103de9061141f565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610bff929190611358565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610c3891906112a3565b6000604051808303816000865af19150503d8060008114610c75576040519150601f19603f3d011682016040523d82523d6000602084013e610c7a565b606091505b5091509150818015610ca4575080511580610ca4575080806020019051810190610ca49190611253565b610cc05760405162461bcd60e51b81526004016103de906115fb565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610d189291906112f0565b60206040518083038186803b158015610d3057600080fd5b505afa158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6891906111cc565b90506001600160a01b038116610d905760405162461bcd60e51b81526004016103de906114b3565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610de190899089906004016112f0565b60206040518083038186803b158015610df957600080fd5b505afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906111cc565b90506000816001600160a01b0316633ddac95387876040518363ffffffff1660e01b8152600401610e63929190611358565b60206040518083038186803b158015610e7b57600080fd5b505afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb3919061128b565b979650505050505050565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610f0f90879087906004016112f0565b60206040518083038186803b158015610f2757600080fd5b505afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906111cc565b90506000816001600160a01b0316633ddac95386856040518363ffffffff1660e01b8152600401610f91929190611358565b60206040518083038186803b158015610fa957600080fd5b505afa158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe1919061128b565b9050478111156110035760405162461bcd60e51b81526004016103de90611521565b61100f853330866110c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415611058576110533382610b48565b610cc0565b610cc0843383610bda565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080856001600160a01b03166323b872dd8686866040516024016110e793929190611334565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161112091906112a3565b6000604051808303816000865af19150503d806000811461115d576040519150601f19603f3d011682016040523d82523d6000602084013e611162565b606091505b509150915081801561118c57508051158061118c57508080602001905181019061118c9190611253565b6111a85760405162461bcd60e51b81526004016103de906113c2565b505050505050565b6000602082840312156111c1578081fd5b813561089d81611719565b6000602082840312156111dd578081fd5b815161089d81611719565b6000806000606084860312156111fc578182fd5b833561120781611719565b9250602084013561121781611719565b929592945050506040919091013590565b6000806040838503121561123a578182fd5b823561124581611719565b946020939093013593505050565b600060208284031215611264578081fd5b8151801515811461089d578182fd5b600060208284031215611284578081fd5b5035919050565b60006020828403121561129c578081fd5b5051919050565b60008251815b818110156112c357602081860181015185830152016112a9565b818111156112d15782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6001600160a01b0381168114610b4157600080fdfea26469706673582212207e4edf03ec22a0db7f0517a822b7242ffdabe6edf4cf4f95835fb643b835e01164736f6c63430008000033",
  "devdoc": {
    "details": "This smart contract is for getting CVR_ETH, CVR_USDT price",
    "kind": "dev",
    "methods": {
      "getNeededTokenAmount(address,address,uint256)": {
        "details": "Get needed _token0 amount for _desiredAmount of _token1"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapTokenWithETH(address,uint256)": {
        "params": {
          "_amount": ": this one is the value with decimals"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 535,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 643,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1654,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1658,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "availableCurrencies",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}