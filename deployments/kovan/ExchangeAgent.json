{
  "address": "0x95635bB88C887ff2464801B989d5483ac8BFe6F8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDC_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UNISWAP_FACTORY",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "AddAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "AddGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "RemoveAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "RemoveGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAsset",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "removeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x40068f085d179ee067b82536d49da38545314a5e22d76583a22d534b18e920a8",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x95635bB88C887ff2464801B989d5483ac8BFe6F8",
    "transactionIndex": 0,
    "gasUsed": "1494011",
    "logsBloom": "0x
    "blockHash": "0x057220b4007365d4ae364d9381d85b265b4c2197855ff4132a812ccb73e6d7c1",
    "transactionHash": "0x40068f085d179ee067b82536d49da38545314a5e22d76583a22d534b18e920a8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28393250,
        "transactionHash": "0x40068f085d179ee067b82536d49da38545314a5e22d76583a22d534b18e920a8",
        "address": "0x95635bB88C887ff2464801B989d5483ac8BFe6F8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x057220b4007365d4ae364d9381d85b265b4c2197855ff4132a812ccb73e6d7c1"
      }
    ],
    "blockNumber": 28393250,
    "cumulativeGasUsed": "1494011",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FED7f0b36374B8Ee25177b3cbE21B6c8E079F4E",
    "0xd0A1E359811322d97991E03f863a0C30C2cF029C",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
  ],
  "solcInputHash": "b9f5be885696f0e623502845256d15e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UNISWAP_FACTORY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"AddAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"AddGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"RemoveAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"RemoveGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAsset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This smart contract is for getting CVR_ETH, CVR_USDT price\",\"kind\":\"dev\",\"methods\":{\"getNeededTokenAmount(address,address,uint256)\":{\"details\":\"Get needed _token0 amount for _desiredAmount of _token1\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapTokenWithETH(address,uint256)\":{\"params\":{\"_amount\":\": this one is the value with decimals\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./libs/TransferHelper.sol\\\";\\nimport {IUniswapV2Pair} from \\\"./interfaces/IUniswapV2Pair.sol\\\";\\nimport {IUniswapV2Factory} from \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\n\\n/**\\n * @dev This smart contract is for getting CVR_ETH, CVR_USDT price\\n */\\ncontract ExchangeAgent is Ownable, IExchangeAgent, ReentrancyGuard {\\n    event AddGateway(address _sender, address _gateway);\\n    event RemoveGateway(address _sender, address _gateway);\\n    event AddAvailableCurrency(address _sender, address _currency);\\n    event RemoveAvailableCurrency(address _sender, address _currency);\\n    event WithdrawAsset(address _user, address _to, address _token, uint256 _amount);\\n\\n    mapping(address => bool) public whiteList; // white listed polka gateways\\n    // available currencies in Polkacover, token => pair\\n    // for now we allow CVR\\n    mapping(address => bool) public availableCurrencies;\\n\\n    address public immutable USDC_ADDRESS;\\n    address public immutable WETH;\\n    address public immutable UNISWAP_FACTORY;\\n\\n    constructor(\\n        address _USDC_ADDRESS,\\n        address _WETH,\\n        address _UNISWAP_FACTORY\\n    ) {\\n        USDC_ADDRESS = _USDC_ADDRESS;\\n        WETH = _WETH;\\n        UNISWAP_FACTORY = _UNISWAP_FACTORY;\\n    }\\n\\n    receive() external payable {}\\n\\n    modifier onlyWhiteListed(address _gateway) {\\n        require(whiteList[_gateway], \\\"Only white listed addresses are acceptable\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address token0 = IUniswapV2Pair(pair).token0();\\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\\n\\n        uint256 denominator;\\n        uint256 numerator;\\n        if (_token0 == token0) {\\n            denominator = reserve1;\\n            numerator = reserve0 * _desiredAmount;\\n        } else {\\n            denominator = reserve0;\\n            numerator = reserve1 * _desiredAmount;\\n        }\\n\\n        return numerator / denominator;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     */\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _desiredAmount);\\n    }\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(WETH, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _desiredAmount);\\n    }\\n\\n    /**\\n     * @param _amount: this one is the value with decimals\\n     */\\n    function swapTokenWithETH(address _token, uint256 _amount) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        // store CVR in this exchagne contract\\n        // send eth to buy gateway based on the uniswap price\\n        require(availableCurrencies[_token], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token, WETH, _amount);\\n    }\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        require(availableCurrencies[_token0], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token0, _token1, _amount);\\n    }\\n\\n    /**\\n     * @dev exchange _amount of _token0 with _token1\\n     */\\n    function _swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) private {\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address token0 = IUniswapV2Pair(pair).token0();\\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\\n\\n        uint256 denominator;\\n        uint256 numerator;\\n        if (_token0 == token0) {\\n            denominator = reserve0;\\n            numerator = reserve1 * _amount;\\n        } else {\\n            denominator = reserve1;\\n            numerator = reserve0 * _amount;\\n        }\\n\\n        uint256 value = numerator / denominator;\\n        require(value <= address(this).balance, \\\"Insufficient ETH balance\\\");\\n\\n        TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _amount);\\n\\n        if (_token1 == WETH) {\\n            TransferHelper.safeTransferETH(msg.sender, value);\\n        } else {\\n            TransferHelper.safeTransfer(_token1, msg.sender, value);\\n        }\\n    }\\n\\n    function addWhiteList(address _gateway) external onlyOwner {\\n        require(!whiteList[_gateway], \\\"Already white listed\\\");\\n        whiteList[_gateway] = true;\\n        emit AddGateway(msg.sender, _gateway);\\n    }\\n\\n    function removeWhiteList(address _gateway) external onlyOwner {\\n        require(whiteList[_gateway], \\\"Not white listed\\\");\\n        whiteList[_gateway] = false;\\n        emit RemoveGateway(msg.sender, _gateway);\\n    }\\n\\n    function addCurrency(address _currency) external onlyOwner {\\n        require(!availableCurrencies[_currency], \\\"Already available\\\");\\n        availableCurrencies[_currency] = true;\\n        emit AddAvailableCurrency(msg.sender, _currency);\\n    }\\n\\n    function removeCurrency(address _currency) external onlyOwner {\\n        require(availableCurrencies[_currency], \\\"Not available yet\\\");\\n        availableCurrencies[_currency] = false;\\n        emit RemoveAvailableCurrency(msg.sender, _currency);\\n    }\\n\\n    function withdrawAsset(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        if (_token == address(0)) {\\n            TransferHelper.safeTransferETH(_to, _amount);\\n        } else {\\n            TransferHelper.safeTransfer(_token, _to, _amount);\\n        }\\n        emit WithdrawAsset(owner(), _to, _token, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xdd48a25df100e32ef730f599d971d87b18bca4b537fb4e378b57cf0827e028e6\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\ninterface IExchangeAgent {\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external returns (uint256);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function swapTokenWithETH(address _token, uint256 _amount) external;\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6b3a247450082bf7e12ca27c13685885e56e396192d91ddd24820f9e6562cd6a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\ninterface IUniswapV2Factory {\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x6e5250dccf1ed00969b6f3b3616bbd50744d62d0fcd7a024c0e03ebc765b4794\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Pair {\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n}\\n\",\"keccak256\":\"0xca87cafa76fac381b9df7c9b68274f869ef4c76296d754b01bd998b889428f3f\",\"license\":\"MIT\"},\"contracts/libs/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2005ff7c65cd1282b2b470ea7b11782c9abaae62fbeacd100b8840d653c5f8e6\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001ac238038062001ac28339810160408190526200003491620000d7565b600062000040620000b6565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180556001600160601b0319606093841b811660805291831b821660a05290911b1660c05262000120565b3390565b80516001600160a01b0381168114620000d257600080fd5b919050565b600080600060608486031215620000ec578283fd5b620000f784620000ba565b92506200010760208501620000ba565b91506200011760408501620000ba565b90509250925092565b60805160601c60a05160601c60c05160601c61193162000191600039600081816109ed01528181610d310152610f680152600081816105520152818161076f015281816108af015281816108d9015261119401526000818161057301528181610881015261090001526119316000f3fe6080604052600436106101185760003560e01c80638ab234b6116100a0578063bb09d9b711610064578063bb09d9b7146102f5578063c5d3a1071461030a578063c74c0fac1461032a578063e7cd4a041461033f578063f2fde38b1461035f5761011f565b80638ab234b61461025e5780638da5cb5b1461027e578063a9a12d43146102a0578063ad5c4648146102c0578063ba560ed9146102d55761011f565b8063372c12b1116100e7578063372c12b1146101c9578063531a2211146101e95780636e85a5ab14610209578063715018a61461022957806378cb71711461023e5761011f565b8063092ae4dc146101245780631af42c0f146101465780632042e5c21461017c57806334899be61461019c5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611331565b61037f565b005b34801561015257600080fd5b506101666101613660046112f9565b610438565b60405161017391906114f0565b60405180910390f35b34801561018857600080fd5b506101446101973660046112f9565b61044d565b3480156101a857600080fd5b506101bc6101b7366004611331565b610521565b604051610173919061188f565b3480156101d557600080fd5b506101666101e43660046112f9565b610536565b3480156101f557600080fd5b506101bc61020436600461140a565b61054b565b34801561021557600080fd5b50610144610224366004611331565b6105a0565b34801561023557600080fd5b50610144610644565b34801561024a57600080fd5b50610144610259366004611371565b6106da565b34801561026a57600080fd5b506101446102793660046112f9565b61079d565b34801561028a57600080fd5b5061029361086a565b604051610173919061145b565b3480156102ac57600080fd5b506101bc6102bb366004611371565b610879565b3480156102cc57600080fd5b506102936108ad565b3480156102e157600080fd5b506101bc6102f0366004611371565b6108d1565b34801561030157600080fd5b506102936108fe565b34801561031657600080fd5b506101446103253660046112f9565b610922565b34801561033657600080fd5b506102936109eb565b34801561034b57600080fd5b5061014461035a3660046112f9565b610a0f565b34801561036b57600080fd5b5061014461037a3660046112f9565b610adc565b610387610ba9565b6001600160a01b031661039861086a565b6001600160a01b0316146103c75760405162461bcd60e51b81526004016103be906116d7565b60405180910390fd5b6001600160a01b0382166103e4576103df8382610bad565b6103ef565b6103ef828483610c3f565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461041861086a565b84848460405161042b9493929190611489565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610455610ba9565b6001600160a01b031661046661086a565b6001600160a01b03161461048c5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526002602052604090205460ff166104c45760405162461bcd60e51b81526004016103be90611743565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe90610516903390849061146f565b60405180910390a150565b600061052e848484610d2c565b949350505050565b60026020526000908152604090205460ff1681565b60006105987f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610d2c565b90505b919050565b3360008181526002602052604090205460ff166105cf5760405162461bcd60e51b81526004016103be90611845565b600260015414156105f25760405162461bcd60e51b81526004016103be9061180e565b60026001556001600160a01b03841660009081526003602052604090205460ff1661062f5760405162461bcd60e51b81526004016103be906117c7565b61063a848484610f4e565b5050600180555050565b61064c610ba9565b6001600160a01b031661065d61086a565b6001600160a01b0316146106835760405162461bcd60e51b81526004016103be906116d7565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b3360008181526002602052604090205460ff166107095760405162461bcd60e51b81526004016103be90611845565b6002600154141561072c5760405162461bcd60e51b81526004016103be9061180e565b60026001556001600160a01b03831660009081526003602052604090205460ff166107695760405162461bcd60e51b81526004016103be906117c7565b610794837f000000000000000000000000000000000000000000000000000000000000000084610f4e565b50506001805550565b6107a5610ba9565b6001600160a01b03166107b661086a565b6001600160a01b0316146107dc5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526003602052604090205460ff16156108155760405162461bcd60e51b81526004016103be906115fb565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d9890610516903390849061146f565b6000546001600160a01b031690565b60006108a6837f000000000000000000000000000000000000000000000000000000000000000084610d2c565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108a6837f000000000000000000000000000000000000000000000000000000000000000084610d2c565b7f000000000000000000000000000000000000000000000000000000000000000081565b61092a610ba9565b6001600160a01b031661093b61086a565b6001600160a01b0316146109615760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526003602052604090205460ff166109995760405162461bcd60e51b81526004016103be9061170c565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b90610516903390849061146f565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a17610ba9565b6001600160a01b0316610a2861086a565b6001600160a01b031614610a4e5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526002602052604090205460ff1615610a875760405162461bcd60e51b81526004016103be90611669565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e90610516903390849061146f565b610ae4610ba9565b6001600160a01b0316610af561086a565b6001600160a01b031614610b1b5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b038116610b415760405162461bcd60e51b81526004016103be906114fb565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610bd79190611422565b60006040518083038185875af1925050503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5050905080610c3a5760405162461bcd60e51b81526004016103be9061159e565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610c649291906114d7565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610c9d9190611422565b6000604051808303816000865af19150503d8060008114610cda576040519150601f19603f3d011682016040523d82523d6000602084013e610cdf565b606091505b5091509150818015610d09575080511580610d09575080806020019051810190610d09919061139c565b610d255760405162461bcd60e51b81526004016103be9061177a565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610d7d92919061146f565b60206040518083038186803b158015610d9557600080fd5b505afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190611315565b90506001600160a01b038116610df55760405162461bcd60e51b81526004016103be90611632565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3057600080fd5b505afa158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190611315565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ea657600080fd5b505afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede91906113bc565b506001600160701b031691506001600160701b03169150600080846001600160a01b03168a6001600160a01b03161415610f2657829150610f1f88856118b8565b9050610f36565b839150610f3388846118b8565b90505b610f408282611898565b9a9950505050505050505050565b60405163e6a4390560e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590610f9f908790879060040161146f565b60206040518083038186803b158015610fb757600080fd5b505afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190611315565b90506001600160a01b0381166110175760405162461bcd60e51b81526004016103be90611632565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561105257600080fd5b505afa158015611066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a9190611315565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156110c857600080fd5b505afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110091906113bc565b506001600160701b031691506001600160701b03169150600080846001600160a01b0316896001600160a01b031614156111485783915061114187846118b8565b9050611158565b82915061115587856118b8565b90505b60006111648383611898565b9050478111156111865760405162461bcd60e51b81526004016103be906116a0565b6111928a33308b6111f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316896001600160a01b031614156111db576111d63382610bad565b6111e6565b6111e6893383610c3f565b50505050505050505050565b600080856001600160a01b03166323b872dd868686604051602401611219939291906114b3565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516112529190611422565b6000604051808303816000865af19150503d806000811461128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b50915091508180156112be5750805115806112be5750808060200190518101906112be919061139c565b6112da5760405162461bcd60e51b81526004016103be90611541565b505050505050565b80516001600160701b038116811461059b57600080fd5b60006020828403121561130a578081fd5b81356108a6816118e3565b600060208284031215611326578081fd5b81516108a6816118e3565b600080600060608486031215611345578182fd5b8335611350816118e3565b92506020840135611360816118e3565b929592945050506040919091013590565b60008060408385031215611383578182fd5b823561138e816118e3565b946020939093013593505050565b6000602082840312156113ad578081fd5b815180151581146108a6578182fd5b6000806000606084860312156113d0578283fd5b6113d9846112e2565b92506113e7602085016112e2565b9150604084015163ffffffff811681146113ff578182fd5b809150509250925092565b60006020828403121561141b578081fd5b5035919050565b60008251815b818110156114425760208186018101518583015201611428565b818111156114505782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6000826118b357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118de57634e487b7160e01b81526011600452602481fd5b500290565b6001600160a01b03811681146118f857600080fd5b5056fea2646970667358221220554834fc601d5aa7c91eb42e996b6f6198161f77ae6c1bda7cca51f48cf30f4a64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101185760003560e01c80638ab234b6116100a0578063bb09d9b711610064578063bb09d9b7146102f5578063c5d3a1071461030a578063c74c0fac1461032a578063e7cd4a041461033f578063f2fde38b1461035f5761011f565b80638ab234b61461025e5780638da5cb5b1461027e578063a9a12d43146102a0578063ad5c4648146102c0578063ba560ed9146102d55761011f565b8063372c12b1116100e7578063372c12b1146101c9578063531a2211146101e95780636e85a5ab14610209578063715018a61461022957806378cb71711461023e5761011f565b8063092ae4dc146101245780631af42c0f146101465780632042e5c21461017c57806334899be61461019c5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611331565b61037f565b005b34801561015257600080fd5b506101666101613660046112f9565b610438565b60405161017391906114f0565b60405180910390f35b34801561018857600080fd5b506101446101973660046112f9565b61044d565b3480156101a857600080fd5b506101bc6101b7366004611331565b610521565b604051610173919061188f565b3480156101d557600080fd5b506101666101e43660046112f9565b610536565b3480156101f557600080fd5b506101bc61020436600461140a565b61054b565b34801561021557600080fd5b50610144610224366004611331565b6105a0565b34801561023557600080fd5b50610144610644565b34801561024a57600080fd5b50610144610259366004611371565b6106da565b34801561026a57600080fd5b506101446102793660046112f9565b61079d565b34801561028a57600080fd5b5061029361086a565b604051610173919061145b565b3480156102ac57600080fd5b506101bc6102bb366004611371565b610879565b3480156102cc57600080fd5b506102936108ad565b3480156102e157600080fd5b506101bc6102f0366004611371565b6108d1565b34801561030157600080fd5b506102936108fe565b34801561031657600080fd5b506101446103253660046112f9565b610922565b34801561033657600080fd5b506102936109eb565b34801561034b57600080fd5b5061014461035a3660046112f9565b610a0f565b34801561036b57600080fd5b5061014461037a3660046112f9565b610adc565b610387610ba9565b6001600160a01b031661039861086a565b6001600160a01b0316146103c75760405162461bcd60e51b81526004016103be906116d7565b60405180910390fd5b6001600160a01b0382166103e4576103df8382610bad565b6103ef565b6103ef828483610c3f565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461041861086a565b84848460405161042b9493929190611489565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610455610ba9565b6001600160a01b031661046661086a565b6001600160a01b03161461048c5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526002602052604090205460ff166104c45760405162461bcd60e51b81526004016103be90611743565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe90610516903390849061146f565b60405180910390a150565b600061052e848484610d2c565b949350505050565b60026020526000908152604090205460ff1681565b60006105987f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610d2c565b90505b919050565b3360008181526002602052604090205460ff166105cf5760405162461bcd60e51b81526004016103be90611845565b600260015414156105f25760405162461bcd60e51b81526004016103be9061180e565b60026001556001600160a01b03841660009081526003602052604090205460ff1661062f5760405162461bcd60e51b81526004016103be906117c7565b61063a848484610f4e565b5050600180555050565b61064c610ba9565b6001600160a01b031661065d61086a565b6001600160a01b0316146106835760405162461bcd60e51b81526004016103be906116d7565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b3360008181526002602052604090205460ff166107095760405162461bcd60e51b81526004016103be90611845565b6002600154141561072c5760405162461bcd60e51b81526004016103be9061180e565b60026001556001600160a01b03831660009081526003602052604090205460ff166107695760405162461bcd60e51b81526004016103be906117c7565b610794837f000000000000000000000000000000000000000000000000000000000000000084610f4e565b50506001805550565b6107a5610ba9565b6001600160a01b03166107b661086a565b6001600160a01b0316146107dc5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526003602052604090205460ff16156108155760405162461bcd60e51b81526004016103be906115fb565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d9890610516903390849061146f565b6000546001600160a01b031690565b60006108a6837f000000000000000000000000000000000000000000000000000000000000000084610d2c565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006108a6837f000000000000000000000000000000000000000000000000000000000000000084610d2c565b7f000000000000000000000000000000000000000000000000000000000000000081565b61092a610ba9565b6001600160a01b031661093b61086a565b6001600160a01b0316146109615760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526003602052604090205460ff166109995760405162461bcd60e51b81526004016103be9061170c565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b90610516903390849061146f565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a17610ba9565b6001600160a01b0316610a2861086a565b6001600160a01b031614610a4e5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b03811660009081526002602052604090205460ff1615610a875760405162461bcd60e51b81526004016103be90611669565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e90610516903390849061146f565b610ae4610ba9565b6001600160a01b0316610af561086a565b6001600160a01b031614610b1b5760405162461bcd60e51b81526004016103be906116d7565b6001600160a01b038116610b415760405162461bcd60e51b81526004016103be906114fb565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610bd79190611422565b60006040518083038185875af1925050503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5050905080610c3a5760405162461bcd60e51b81526004016103be9061159e565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610c649291906114d7565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610c9d9190611422565b6000604051808303816000865af19150503d8060008114610cda576040519150601f19603f3d011682016040523d82523d6000602084013e610cdf565b606091505b5091509150818015610d09575080511580610d09575080806020019051810190610d09919061139c565b610d255760405162461bcd60e51b81526004016103be9061177a565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610d7d92919061146f565b60206040518083038186803b158015610d9557600080fd5b505afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190611315565b90506001600160a01b038116610df55760405162461bcd60e51b81526004016103be90611632565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3057600080fd5b505afa158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190611315565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ea657600080fd5b505afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede91906113bc565b506001600160701b031691506001600160701b03169150600080846001600160a01b03168a6001600160a01b03161415610f2657829150610f1f88856118b8565b9050610f36565b839150610f3388846118b8565b90505b610f408282611898565b9a9950505050505050505050565b60405163e6a4390560e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590610f9f908790879060040161146f565b60206040518083038186803b158015610fb757600080fd5b505afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190611315565b90506001600160a01b0381166110175760405162461bcd60e51b81526004016103be90611632565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561105257600080fd5b505afa158015611066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a9190611315565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156110c857600080fd5b505afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110091906113bc565b506001600160701b031691506001600160701b03169150600080846001600160a01b0316896001600160a01b031614156111485783915061114187846118b8565b9050611158565b82915061115587856118b8565b90505b60006111648383611898565b9050478111156111865760405162461bcd60e51b81526004016103be906116a0565b6111928a33308b6111f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316896001600160a01b031614156111db576111d63382610bad565b6111e6565b6111e6893383610c3f565b50505050505050505050565b600080856001600160a01b03166323b872dd868686604051602401611219939291906114b3565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516112529190611422565b6000604051808303816000865af19150503d806000811461128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b50915091508180156112be5750805115806112be5750808060200190518101906112be919061139c565b6112da5760405162461bcd60e51b81526004016103be90611541565b505050505050565b80516001600160701b038116811461059b57600080fd5b60006020828403121561130a578081fd5b81356108a6816118e3565b600060208284031215611326578081fd5b81516108a6816118e3565b600080600060608486031215611345578182fd5b8335611350816118e3565b92506020840135611360816118e3565b929592945050506040919091013590565b60008060408385031215611383578182fd5b823561138e816118e3565b946020939093013593505050565b6000602082840312156113ad578081fd5b815180151581146108a6578182fd5b6000806000606084860312156113d0578283fd5b6113d9846112e2565b92506113e7602085016112e2565b9150604084015163ffffffff811681146113ff578182fd5b809150509250925092565b60006020828403121561141b578081fd5b5035919050565b60008251815b818110156114425760208186018101518583015201611428565b818111156114505782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6000826118b357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118de57634e487b7160e01b81526011600452602481fd5b500290565b6001600160a01b03811681146118f857600080fd5b5056fea2646970667358221220554834fc601d5aa7c91eb42e996b6f6198161f77ae6c1bda7cca51f48cf30f4a64736f6c63430008000033",
  "devdoc": {
    "details": "This smart contract is for getting CVR_ETH, CVR_USDT price",
    "kind": "dev",
    "methods": {
      "getNeededTokenAmount(address,address,uint256)": {
        "details": "Get needed _token0 amount for _desiredAmount of _token1"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapTokenWithETH(address,uint256)": {
        "params": {
          "_amount": ": this one is the value with decimals"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 534,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 647,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1599,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1603,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "availableCurrencies",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}