{
  "address": "0x9717cA3f6b5E560d244D41791D5760316d2b7bFE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CVR_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_USDC_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UNISWAP_FACTORY",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TWAP_ORACLE_PRICE_FEED_FACTORY",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "AddAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "AddGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "RemoveAvailableCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "RemoveGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "UpdateSlippage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippageRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateSlippageRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAsset",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CVR_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SLIPPPAGE_RAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TWAP_ORACLE_PRICE_FEED_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discountPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "removeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_discountPercentage",
          "type": "uint256"
        }
      ],
      "name": "setDiscountPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippageRate",
          "type": "uint256"
        }
      ],
      "name": "setSlippageRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xacb9758f0883b2e626e3127fc03c5e96c4b6bec52769d297d9d6fe81ce9bb970",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x9717cA3f6b5E560d244D41791D5760316d2b7bFE",
    "transactionIndex": 0,
    "gasUsed": "1723943",
    "logsBloom": "0x
    "blockHash": "0x2dfcebfd31eda88c997ce0487ee4c07823e243182c8a706b0b1eb781a043690d",
    "transactionHash": "0xacb9758f0883b2e626e3127fc03c5e96c4b6bec52769d297d9d6fe81ce9bb970",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9846317,
        "transactionHash": "0xacb9758f0883b2e626e3127fc03c5e96c4b6bec52769d297d9d6fe81ce9bb970",
        "address": "0x9717cA3f6b5E560d244D41791D5760316d2b7bFE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2dfcebfd31eda88c997ce0487ee4c07823e243182c8a706b0b1eb781a043690d"
      }
    ],
    "blockNumber": 9846317,
    "cumulativeGasUsed": "1723943",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd3e48FAcD30A73609ffA60AE84851e72d10fEa52",
    "0xD4D5c5D939A173b9c18a6B72eEaffD98ecF8b3F6",
    "0xc778417e063141139fce010982780140aa0cd5ab",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    "0x6fa8a7E5c13E4094fD4Fa288ba59544791E4c9d3"
  ],
  "solcInputHash": "d92c6dad7f52700f9d5fb428b9582922",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CVR_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDC_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UNISWAP_FACTORY\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TWAP_ORACLE_PRICE_FEED_FACTORY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"AddAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"AddGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"RemoveAvailableCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"RemoveGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"UpdateSlippage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippageRate\",\"type\":\"uint256\"}],\"name\":\"UpdateSlippageRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAsset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CVR_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLIPPPAGE_RAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TWAP_ORACLE_PRICE_FEED_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_discountPercentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippageRate\",\"type\":\"uint256\"}],\"name\":\"setSlippageRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This smart contract is for getting CVR_ETH, CVR_USDT price\",\"kind\":\"dev\",\"methods\":{\"getNeededTokenAmount(address,address,uint256)\":{\"details\":\"Get needed _token0 amount for _desiredAmount of _token1\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapTokenWithETH(address,uint256,uint256)\":{\"params\":{\"_amount\":\": this one is the value with decimals\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"discountPercentage()\":{\"notice\":\"when users try to use CVR to buy products, we will discount some percentage(25% at first stage)\"},\"getTokenAmountForETH(address,uint256)\":{\"notice\":\"get needed _token amount for _desiredAmount of ETH\"},\"getTokenAmountForUSDC(address,uint256)\":{\"notice\":\"get needed _token amount for _desiredAmount of USDC\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"./libs/TransferHelper.sol\\\";\\r\\nimport {IUniswapV2Pair} from \\\"./interfaces/IUniswapV2Pair.sol\\\";\\r\\nimport {IUniswapV2Factory} from \\\"./interfaces/IUniswapV2Factory.sol\\\";\\r\\nimport \\\"./interfaces/ITwapOraclePriceFeedFactory.sol\\\";\\r\\nimport \\\"./interfaces/ITwapOraclePriceFeed.sol\\\";\\r\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev This smart contract is for getting CVR_ETH, CVR_USDT price\\r\\n */\\r\\ncontract ExchangeAgent is Ownable, IExchangeAgent, ReentrancyGuard {\\r\\n    event AddGateway(address _sender, address _gateway);\\r\\n    event RemoveGateway(address _sender, address _gateway);\\r\\n    event AddAvailableCurrency(address _sender, address _currency);\\r\\n    event RemoveAvailableCurrency(address _sender, address _currency);\\r\\n    event UpdateSlippage(address _sender, uint256 _slippage);\\r\\n    event WithdrawAsset(address _user, address _to, address _token, uint256 _amount);\\r\\n    event UpdateSlippageRate(address _user, uint256 _slippageRate);\\r\\n\\r\\n    mapping(address => bool) public whiteList; // white listed CoverCompared gateways\\r\\n\\r\\n    // available currencies in CoverCompared, token => bool\\r\\n    // for now we allow CVR\\r\\n    mapping(address => bool) public availableCurrencies;\\r\\n\\r\\n    address public immutable CVR_ADDRESS;\\r\\n    address public immutable USDC_ADDRESS;\\r\\n    address public immutable WETH;\\r\\n    address public immutable UNISWAP_FACTORY;\\r\\n    address public immutable TWAP_ORACLE_PRICE_FEED_FACTORY;\\r\\n\\r\\n    uint256 public SLIPPPAGE_RAGE;\\r\\n    /**\\r\\n     * when users try to use CVR to buy products, we will discount some percentage(25% at first stage)\\r\\n     */\\r\\n    uint256 public discountPercentage = 75;\\r\\n\\r\\n    constructor(\\r\\n        address _CVR_ADDRESS,\\r\\n        address _USDC_ADDRESS,\\r\\n        address _WETH,\\r\\n        address _UNISWAP_FACTORY,\\r\\n        address _TWAP_ORACLE_PRICE_FEED_FACTORY\\r\\n    ) {\\r\\n        CVR_ADDRESS = _CVR_ADDRESS;\\r\\n        USDC_ADDRESS = _USDC_ADDRESS;\\r\\n        WETH = _WETH;\\r\\n        UNISWAP_FACTORY = _UNISWAP_FACTORY;\\r\\n        TWAP_ORACLE_PRICE_FEED_FACTORY = _TWAP_ORACLE_PRICE_FEED_FACTORY;\\r\\n        SLIPPPAGE_RAGE = 100;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    modifier onlyWhiteListed(address _gateway) {\\r\\n        require(whiteList[_gateway], \\\"Only white listed addresses are acceptable\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function setDiscountPercentage(uint256 _discountPercentage) external onlyOwner {\\r\\n        discountPercentage = _discountPercentage;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\r\\n     * _desiredAmount should consider decimals based on _token1\\r\\n     */\\r\\n    function _getNeededTokenAmount(\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint256 _desiredAmount\\r\\n    ) private view returns (uint256) {\\r\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\r\\n        require(pair != address(0), \\\"There's no pair\\\");\\r\\n\\r\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\r\\n            _token0,\\r\\n            _token1\\r\\n        );\\r\\n\\r\\n        require(twapOraclePriceFeed != address(0), \\\"There's no twap oracle for this pair\\\");\\r\\n\\r\\n        uint256 neededAmount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token1, _desiredAmount);\\r\\n        if (_token0 == CVR_ADDRESS) {\\r\\n            neededAmount = (neededAmount * discountPercentage) / 100;     \\r\\n        }\\r\\n\\r\\n        return neededAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\r\\n     */\\r\\n    function getNeededTokenAmount(\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint256 _desiredAmount\\r\\n    ) external view override returns (uint256) {\\r\\n        return _getNeededTokenAmount(_token0, _token1, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view override returns (uint256) {\\r\\n        return _getNeededTokenAmount(WETH, USDC_ADDRESS, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * get needed _token amount for _desiredAmount of USDC\\r\\n     */\\r\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\r\\n        return _getNeededTokenAmount(_token, USDC_ADDRESS, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * get needed _token amount for _desiredAmount of ETH\\r\\n     */\\r\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\r\\n        return _getNeededTokenAmount(_token, WETH, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param _amount: this one is the value with decimals\\r\\n     */\\r\\n    function swapTokenWithETH(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _desiredAmount\\r\\n    ) external override onlyWhiteListed(msg.sender) nonReentrant {\\r\\n        // store CVR in this exchagne contract\\r\\n        // send eth to buy gateway based on the uniswap price\\r\\n        require(availableCurrencies[_token], \\\"Token should be added in available list\\\");\\r\\n        _swapTokenWithToken(_token, WETH, _amount, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    function swapTokenWithToken(\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint256 _amount,\\r\\n        uint256 _desiredAmount\\r\\n    ) external override onlyWhiteListed(msg.sender) nonReentrant {\\r\\n        require(availableCurrencies[_token0], \\\"Token should be added in available list\\\");\\r\\n        _swapTokenWithToken(_token0, _token1, _amount, _desiredAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev exchange _amount of _token0 with _token1 by twap oracle price\\r\\n     */\\r\\n    function _swapTokenWithToken(\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint256 _amount,\\r\\n        uint256 _desiredAmount\\r\\n    ) private {\\r\\n        address twapOraclePriceFeed = ITwapOraclePriceFeedFactory(TWAP_ORACLE_PRICE_FEED_FACTORY).getTwapOraclePriceFeed(\\r\\n            _token0,\\r\\n            _token1\\r\\n        );\\r\\n\\r\\n        uint256 swapAmount = ITwapOraclePriceFeed(twapOraclePriceFeed).consult(_token0, _amount);\\r\\n        require(swapAmount <= address(this).balance, \\\"Insufficient ETH balance\\\");\\r\\n        uint256 availableMinAmount = (_desiredAmount * (10000 - SLIPPPAGE_RAGE)) / 10000;\\r\\n        if (_token0 == CVR_ADDRESS) {\\r\\n            availableMinAmount = availableMinAmount * discountPercentage / 100;\\r\\n        }\\r\\n        require(swapAmount > availableMinAmount, \\\"Overflow min amount\\\");\\r\\n\\r\\n        TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _amount);\\r\\n\\r\\n        if (_token1 == WETH) {\\r\\n            TransferHelper.safeTransferETH(msg.sender, _desiredAmount);\\r\\n        } else {\\r\\n            TransferHelper.safeTransfer(_token1, msg.sender, _desiredAmount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addWhiteList(address _gateway) external onlyOwner {\\r\\n        require(!whiteList[_gateway], \\\"Already white listed\\\");\\r\\n        whiteList[_gateway] = true;\\r\\n        emit AddGateway(msg.sender, _gateway);\\r\\n    }\\r\\n\\r\\n    function removeWhiteList(address _gateway) external onlyOwner {\\r\\n        require(whiteList[_gateway], \\\"Not white listed\\\");\\r\\n        whiteList[_gateway] = false;\\r\\n        emit RemoveGateway(msg.sender, _gateway);\\r\\n    }\\r\\n\\r\\n    function addCurrency(address _currency) external onlyOwner {\\r\\n        require(!availableCurrencies[_currency], \\\"Already available\\\");\\r\\n        availableCurrencies[_currency] = true;\\r\\n        emit AddAvailableCurrency(msg.sender, _currency);\\r\\n    }\\r\\n\\r\\n    function removeCurrency(address _currency) external onlyOwner {\\r\\n        require(availableCurrencies[_currency], \\\"Not available yet\\\");\\r\\n        availableCurrencies[_currency] = false;\\r\\n        emit RemoveAvailableCurrency(msg.sender, _currency);\\r\\n    }\\r\\n\\r\\n    function setSlippageRate(uint256 _slippageRate) external onlyOwner {\\r\\n        require(_slippageRate > 0 && _slippageRate < 100, \\\"Overflow range\\\");\\r\\n        SLIPPPAGE_RAGE = _slippageRate * 100;\\r\\n        emit UpdateSlippageRate(msg.sender, _slippageRate);\\r\\n    }\\r\\n\\r\\n    function withdrawAsset(\\r\\n        address _to,\\r\\n        address _token,\\r\\n        uint256 _amount\\r\\n    ) external onlyOwner {\\r\\n        if (_token == address(0)) {\\r\\n            TransferHelper.safeTransferETH(_to, _amount);\\r\\n        } else {\\r\\n            TransferHelper.safeTransfer(_token, _to, _amount);\\r\\n        }\\r\\n        emit WithdrawAsset(owner(), _to, _token, _amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x685503d1e0aa43da83c1aa14364e7cad2065b303d266b5d574d5ff6d8810707c\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\ninterface IExchangeAgent {\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external returns (uint256);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function swapTokenWithETH(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _desiredAmount\\n    ) external;\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount,\\n        uint256 _desiredAmount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1aad6c6cae768a559b0c7ed1de81906e327e45f93a1f7a3bdc25c7323a959d0d\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeed {\\n    function update() external;\\n\\n    function consult(address token, uint256 amountIn) external view returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x93c07be9b8250abbe953aa68574a82e0e58e4a6330e190785d8a95e0762a8752\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITwapOraclePriceFeedFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ITwapOraclePriceFeedFactory {\\n    function twapOraclePriceFeedList(address _pair) external view returns (address);\\n\\n    function getTwapOraclePriceFeed(address _token0, address _token1) external view returns (address twapOraclePriceFeed);\\n}\\n\",\"keccak256\":\"0xa476375c4fb24d5ee56dfdd8a9059530e2678be1d5a0070c129919c9e9932898\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\ninterface IUniswapV2Factory {\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x6e5250dccf1ed00969b6f3b3616bbd50744d62d0fcd7a024c0e03ebc765b4794\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Pair {\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n}\\n\",\"keccak256\":\"0xca87cafa76fac381b9df7c9b68274f869ef4c76296d754b01bd998b889428f3f\",\"license\":\"MIT\"},\"contracts/libs/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2005ff7c65cd1282b2b470ea7b11782c9abaae62fbeacd100b8840d653c5f8e6\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x610120604052604b6005553480156200001757600080fd5b5060405162001e8c38038062001e8c8339810160408190526200003a91620000f2565b600062000046620000d1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180556001600160601b0319606095861b811660805293851b841660a05291841b831660c052831b821660e05290911b1661010052606460045562000161565b3390565b80516001600160a01b0381168114620000ed57600080fd5b919050565b600080600080600060a086880312156200010a578081fd5b6200011586620000d5565b94506200012560208701620000d5565b93506200013560408701620000d5565b92506200014560608701620000d5565b91506200015560808701620000d5565b90509295509295909350565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c611c8a6200020260003960008181610a4401528181610fa101526112b9015260008181610c2401526111db0152600081816105e30152818161073301528181610a9c01528181610b10015261117b01526000818161075401528181610a6e0152610b37015260008181610c48015281816110f901526113ed0152611c8a6000f3fe60806040526004361061019a5760003560e01c80638da5cb5b116100e1578063ba560ed91161008a578063c74c0fac11610064578063c74c0fac1461042b578063e233bd9a14610440578063e7cd4a0414610455578063f2fde38b14610475576101a1565b8063ba560ed9146103d6578063bb09d9b7146103f6578063c5d3a1071461040b576101a1565b8063ad5c4648116100bb578063ad5c46481461038c578063b3428d15146103a1578063b3fa9f24146103c1576101a1565b80638da5cb5b1461033557806390600a3114610357578063a9a12d431461036c576101a1565b8063372c12b111610143578063759362311161011d57806375936231146102d557806380dcc456146102f55780638ab234b614610315576101a1565b8063372c12b114610280578063531a2211146102a0578063715018a6146102c0576101a1565b80631d514c7e116101745780631d514c7e1461021e5780632042e5c21461024057806334899be614610260576101a1565b8063092ae4dc146101a65780630de43334146101c85780631af42c0f146101e8576101a1565b366101a157005b600080fd5b3480156101b257600080fd5b506101c66101c1366004611574565b610495565b005b3480156101d457600080fd5b506101c66101e3366004611624565b61054e565b3480156101f457600080fd5b5061020861020336600461153c565b610613565b6040516102159190611776565b60405180910390f35b34801561022a57600080fd5b50610233610628565b6040516102159190611bc7565b34801561024c57600080fd5b506101c661025b36600461153c565b61062e565b34801561026c57600080fd5b5061023361027b366004611574565b610702565b34801561028c57600080fd5b5061020861029b36600461153c565b610717565b3480156102ac57600080fd5b506102336102bb366004611678565b61072c565b3480156102cc57600080fd5b506101c661077f565b3480156102e157600080fd5b506101c66102f0366004611678565b610815565b34801561030157600080fd5b506101c66103103660046115b4565b6108c0565b34801561032157600080fd5b506101c661033036600461153c565b610966565b34801561034157600080fd5b5061034a610a33565b60405161021591906116e1565b34801561036357600080fd5b5061034a610a42565b34801561037857600080fd5b506102336103873660046115f9565b610a66565b34801561039857600080fd5b5061034a610a9a565b3480156103ad57600080fd5b506101c66103bc366004611678565b610abe565b3480156103cd57600080fd5b50610233610b02565b3480156103e257600080fd5b506102336103f13660046115f9565b610b08565b34801561040257600080fd5b5061034a610b35565b34801561041757600080fd5b506101c661042636600461153c565b610b59565b34801561043757600080fd5b5061034a610c22565b34801561044c57600080fd5b5061034a610c46565b34801561046157600080fd5b506101c661047036600461153c565b610c6a565b34801561048157600080fd5b506101c661049036600461153c565b610d37565b61049d610e04565b6001600160a01b03166104ae610a33565b6001600160a01b0316146104dd5760405162461bcd60e51b81526004016104d4906119d8565b60405180910390fd5b6001600160a01b0382166104fa576104f58382610e08565b610505565b610505828483610e9a565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461052e610a33565b848484604051610541949392919061170f565b60405180910390a1505050565b3360008181526002602052604090205460ff1661057d5760405162461bcd60e51b81526004016104d490611b7d565b600260015414156105a05760405162461bcd60e51b81526004016104d490611b46565b60026001556001600160a01b03841660009081526003602052604090205460ff166105dd5760405162461bcd60e51b81526004016104d490611aff565b610609847f00000000000000000000000000000000000000000000000000000000000000008585610f87565b5050600180555050565b60036020526000908152604090205460ff1681565b60045481565b610636610e04565b6001600160a01b0316610647610a33565b6001600160a01b03161461066d5760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526002602052604090205460ff166106a55760405162461bcd60e51b81526004016104d490611a44565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe906106f790339084906116f5565b60405180910390a150565b600061070f8484846111d6565b949350505050565b60026020526000908152604090205460ff1681565b60006107797f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846111d6565b92915050565b610787610e04565b6001600160a01b0316610798610a33565b6001600160a01b0316146107be5760405162461bcd60e51b81526004016104d4906119d8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61081d610e04565b6001600160a01b031661082e610a33565b6001600160a01b0316146108545760405162461bcd60e51b81526004016104d4906119d8565b6000811180156108645750606481105b6108805760405162461bcd60e51b81526004016104d490611881565b61088b816064611bf0565b6004556040517ffcca991c5968ee2af646885daaeb76b668081650d5e2c0fe21ce84ad2aedbac3906106f7903390849061175d565b3360008181526002602052604090205460ff166108ef5760405162461bcd60e51b81526004016104d490611b7d565b600260015414156109125760405162461bcd60e51b81526004016104d490611b46565b60026001556001600160a01b03851660009081526003602052604090205460ff1661094f5760405162461bcd60e51b81526004016104d490611aff565b61095b85858585610f87565b505060018055505050565b61096e610e04565b6001600160a01b031661097f610a33565b6001600160a01b0316146109a55760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526003602052604090205460ff16156109de5760405162461bcd60e51b81526004016104d4906118b8565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d98906106f790339084906116f5565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a93837f0000000000000000000000000000000000000000000000000000000000000000846111d6565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610ac6610e04565b6001600160a01b0316610ad7610a33565b6001600160a01b031614610afd5760405162461bcd60e51b81526004016104d4906119d8565b600555565b60055481565b6000610a93837f0000000000000000000000000000000000000000000000000000000000000000846111d6565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b61610e04565b6001600160a01b0316610b72610a33565b6001600160a01b031614610b985760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526003602052604090205460ff16610bd05760405162461bcd60e51b81526004016104d490611a0d565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b906106f790339084906116f5565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610c72610e04565b6001600160a01b0316610c83610a33565b6001600160a01b031614610ca95760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526002602052604090205460ff1615610ce25760405162461bcd60e51b81526004016104d49061196a565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e906106f790339084906116f5565b610d3f610e04565b6001600160a01b0316610d50610a33565b6001600160a01b031614610d765760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b038116610d9c5760405162461bcd60e51b81526004016104d490611781565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610e3291906116a8565b60006040518083038185875af1925050503d8060008114610e6f576040519150601f19603f3d011682016040523d82523d6000602084013e610e74565b606091505b5050905080610e955760405162461bcd60e51b81526004016104d490611824565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610ebf92919061175d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610ef891906116a8565b6000604051808303816000865af19150503d8060008114610f35576040519150601f19603f3d011682016040523d82523d6000602084013e610f3a565b606091505b5091509150818015610f64575080511580610f64575080806020019051810190610f649190611658565b610f805760405162461bcd60e51b81526004016104d490611ab2565b5050505050565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610fd890889088906004016116f5565b60206040518083038186803b158015610ff057600080fd5b505afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190611558565b90506000816001600160a01b0316633ddac95387866040518363ffffffff1660e01b815260040161105a92919061175d565b60206040518083038186803b15801561107257600080fd5b505afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa9190611690565b9050478111156110cc5760405162461bcd60e51b81526004016104d4906119a1565b60006127106004546127106110e19190611c0f565b6110eb9086611bf0565b6110f59190611bd0565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b0316141561114e576064600554826111419190611bf0565b61114b9190611bd0565b90505b80821161116d5760405162461bcd60e51b81526004016104d490611a7b565b6111798733308861144c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156111c2576111bd3385610e08565b6111cd565b6111cd863386610e9a565b50505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b81526004016112279291906116f5565b60206040518083038186803b15801561123f57600080fd5b505afa158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112779190611558565b90506001600160a01b03811661129f5760405162461bcd60e51b81526004016104d490611933565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea906112f090899089906004016116f5565b60206040518083038186803b15801561130857600080fd5b505afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113409190611558565b90506001600160a01b0381166113685760405162461bcd60e51b81526004016104d4906118ef565b604051633ddac95360e01b81526000906001600160a01b03831690633ddac95390611399908990899060040161175d565b60206040518083038186803b1580156113b157600080fd5b505afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e99190611690565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03161415611442576064600554826114359190611bf0565b61143f9190611bd0565b90505b9695505050505050565b600080856001600160a01b03166323b872dd86868660405160240161147393929190611739565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516114ac91906116a8565b6000604051808303816000865af19150503d80600081146114e9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ee565b606091505b50915091508180156115185750805115806115185750808060200190518101906115189190611658565b6115345760405162461bcd60e51b81526004016104d4906117c7565b505050505050565b60006020828403121561154d578081fd5b8135610a9381611c3c565b600060208284031215611569578081fd5b8151610a9381611c3c565b600080600060608486031215611588578182fd5b833561159381611c3c565b925060208401356115a381611c3c565b929592945050506040919091013590565b600080600080608085870312156115c9578081fd5b84356115d481611c3c565b935060208501356115e481611c3c565b93969395505050506040820135916060013590565b6000806040838503121561160b578182fd5b823561161681611c3c565b946020939093013593505050565b600080600060608486031215611638578283fd5b833561164381611c3c565b95602085013595506040909401359392505050565b600060208284031215611669578081fd5b81518015158114610a93578182fd5b600060208284031215611689578081fd5b5035919050565b6000602082840312156116a1578081fd5b5051919050565b60008251815b818110156116c857602081860181015185830152016116ae565b818111156116d65782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b6020808252600e908201527f4f766572666c6f772072616e6765000000000000000000000000000000000000604082015260600190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b60208082526024908201527f54686572652773206e6f2074776170206f7261636c6520666f722074686973206040820152633830b4b960e11b606082015260800190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b60208082526013908201527f4f766572666c6f77206d696e20616d6f756e7400000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b600082611beb57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c0a57611c0a611c26565b500290565b600082821015611c2157611c21611c26565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611c5157600080fd5b5056fea264697066735822122021606a7f7a205d68ade60b24af3d12f38579f5409ee6172501e663aa13ad3d3264736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061019a5760003560e01c80638da5cb5b116100e1578063ba560ed91161008a578063c74c0fac11610064578063c74c0fac1461042b578063e233bd9a14610440578063e7cd4a0414610455578063f2fde38b14610475576101a1565b8063ba560ed9146103d6578063bb09d9b7146103f6578063c5d3a1071461040b576101a1565b8063ad5c4648116100bb578063ad5c46481461038c578063b3428d15146103a1578063b3fa9f24146103c1576101a1565b80638da5cb5b1461033557806390600a3114610357578063a9a12d431461036c576101a1565b8063372c12b111610143578063759362311161011d57806375936231146102d557806380dcc456146102f55780638ab234b614610315576101a1565b8063372c12b114610280578063531a2211146102a0578063715018a6146102c0576101a1565b80631d514c7e116101745780631d514c7e1461021e5780632042e5c21461024057806334899be614610260576101a1565b8063092ae4dc146101a65780630de43334146101c85780631af42c0f146101e8576101a1565b366101a157005b600080fd5b3480156101b257600080fd5b506101c66101c1366004611574565b610495565b005b3480156101d457600080fd5b506101c66101e3366004611624565b61054e565b3480156101f457600080fd5b5061020861020336600461153c565b610613565b6040516102159190611776565b60405180910390f35b34801561022a57600080fd5b50610233610628565b6040516102159190611bc7565b34801561024c57600080fd5b506101c661025b36600461153c565b61062e565b34801561026c57600080fd5b5061023361027b366004611574565b610702565b34801561028c57600080fd5b5061020861029b36600461153c565b610717565b3480156102ac57600080fd5b506102336102bb366004611678565b61072c565b3480156102cc57600080fd5b506101c661077f565b3480156102e157600080fd5b506101c66102f0366004611678565b610815565b34801561030157600080fd5b506101c66103103660046115b4565b6108c0565b34801561032157600080fd5b506101c661033036600461153c565b610966565b34801561034157600080fd5b5061034a610a33565b60405161021591906116e1565b34801561036357600080fd5b5061034a610a42565b34801561037857600080fd5b506102336103873660046115f9565b610a66565b34801561039857600080fd5b5061034a610a9a565b3480156103ad57600080fd5b506101c66103bc366004611678565b610abe565b3480156103cd57600080fd5b50610233610b02565b3480156103e257600080fd5b506102336103f13660046115f9565b610b08565b34801561040257600080fd5b5061034a610b35565b34801561041757600080fd5b506101c661042636600461153c565b610b59565b34801561043757600080fd5b5061034a610c22565b34801561044c57600080fd5b5061034a610c46565b34801561046157600080fd5b506101c661047036600461153c565b610c6a565b34801561048157600080fd5b506101c661049036600461153c565b610d37565b61049d610e04565b6001600160a01b03166104ae610a33565b6001600160a01b0316146104dd5760405162461bcd60e51b81526004016104d4906119d8565b60405180910390fd5b6001600160a01b0382166104fa576104f58382610e08565b610505565b610505828483610e9a565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf2461052e610a33565b848484604051610541949392919061170f565b60405180910390a1505050565b3360008181526002602052604090205460ff1661057d5760405162461bcd60e51b81526004016104d490611b7d565b600260015414156105a05760405162461bcd60e51b81526004016104d490611b46565b60026001556001600160a01b03841660009081526003602052604090205460ff166105dd5760405162461bcd60e51b81526004016104d490611aff565b610609847f00000000000000000000000000000000000000000000000000000000000000008585610f87565b5050600180555050565b60036020526000908152604090205460ff1681565b60045481565b610636610e04565b6001600160a01b0316610647610a33565b6001600160a01b03161461066d5760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526002602052604090205460ff166106a55760405162461bcd60e51b81526004016104d490611a44565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f7e6f9151585e8b3778ba2f0d9d91dc061e2fd37fcb944b8ee141c84985a13dbe906106f790339084906116f5565b60405180910390a150565b600061070f8484846111d6565b949350505050565b60026020526000908152604090205460ff1681565b60006107797f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846111d6565b92915050565b610787610e04565b6001600160a01b0316610798610a33565b6001600160a01b0316146107be5760405162461bcd60e51b81526004016104d4906119d8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61081d610e04565b6001600160a01b031661082e610a33565b6001600160a01b0316146108545760405162461bcd60e51b81526004016104d4906119d8565b6000811180156108645750606481105b6108805760405162461bcd60e51b81526004016104d490611881565b61088b816064611bf0565b6004556040517ffcca991c5968ee2af646885daaeb76b668081650d5e2c0fe21ce84ad2aedbac3906106f7903390849061175d565b3360008181526002602052604090205460ff166108ef5760405162461bcd60e51b81526004016104d490611b7d565b600260015414156109125760405162461bcd60e51b81526004016104d490611b46565b60026001556001600160a01b03851660009081526003602052604090205460ff1661094f5760405162461bcd60e51b81526004016104d490611aff565b61095b85858585610f87565b505060018055505050565b61096e610e04565b6001600160a01b031661097f610a33565b6001600160a01b0316146109a55760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526003602052604090205460ff16156109de5760405162461bcd60e51b81526004016104d4906118b8565b6001600160a01b03811660009081526003602052604090819020805460ff19166001179055517fa132450832b0928b2d3be444848d1f495f5805231e4b7f79754f16d6283b8d98906106f790339084906116f5565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a93837f0000000000000000000000000000000000000000000000000000000000000000846111d6565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610ac6610e04565b6001600160a01b0316610ad7610a33565b6001600160a01b031614610afd5760405162461bcd60e51b81526004016104d4906119d8565b600555565b60055481565b6000610a93837f0000000000000000000000000000000000000000000000000000000000000000846111d6565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b61610e04565b6001600160a01b0316610b72610a33565b6001600160a01b031614610b985760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526003602052604090205460ff16610bd05760405162461bcd60e51b81526004016104d490611a0d565b6001600160a01b03811660009081526003602052604090819020805460ff19169055517fedf2bbb4f22f648b36e323e9c29c8cf011823f4ab40e5c29e09bd50e0073e81b906106f790339084906116f5565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610c72610e04565b6001600160a01b0316610c83610a33565b6001600160a01b031614610ca95760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b03811660009081526002602052604090205460ff1615610ce25760405162461bcd60e51b81526004016104d49061196a565b6001600160a01b03811660009081526002602052604090819020805460ff19166001179055517f952f8c896a9d6bb519a6046a342215dda6844c05ea9bbfb0e118b17c349ff67e906106f790339084906116f5565b610d3f610e04565b6001600160a01b0316610d50610a33565b6001600160a01b031614610d765760405162461bcd60e51b81526004016104d4906119d8565b6001600160a01b038116610d9c5760405162461bcd60e51b81526004016104d490611781565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610e3291906116a8565b60006040518083038185875af1925050503d8060008114610e6f576040519150601f19603f3d011682016040523d82523d6000602084013e610e74565b606091505b5050905080610e955760405162461bcd60e51b81526004016104d490611824565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610ebf92919061175d565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610ef891906116a8565b6000604051808303816000865af19150503d8060008114610f35576040519150601f19603f3d011682016040523d82523d6000602084013e610f3a565b606091505b5091509150818015610f64575080511580610f64575080806020019051810190610f649190611658565b610f805760405162461bcd60e51b81526004016104d490611ab2565b5050505050565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea90610fd890889088906004016116f5565b60206040518083038186803b158015610ff057600080fd5b505afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190611558565b90506000816001600160a01b0316633ddac95387866040518363ffffffff1660e01b815260040161105a92919061175d565b60206040518083038186803b15801561107257600080fd5b505afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa9190611690565b9050478111156110cc5760405162461bcd60e51b81526004016104d4906119a1565b60006127106004546127106110e19190611c0f565b6110eb9086611bf0565b6110f59190611bd0565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b0316141561114e576064600554826111419190611bf0565b61114b9190611bd0565b90505b80821161116d5760405162461bcd60e51b81526004016104d490611a7b565b6111798733308861144c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156111c2576111bd3385610e08565b6111cd565b6111cd863386610e9a565b50505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b81526004016112279291906116f5565b60206040518083038186803b15801561123f57600080fd5b505afa158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112779190611558565b90506001600160a01b03811661129f5760405162461bcd60e51b81526004016104d490611933565b604051632de7797560e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635bcef2ea906112f090899089906004016116f5565b60206040518083038186803b15801561130857600080fd5b505afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113409190611558565b90506001600160a01b0381166113685760405162461bcd60e51b81526004016104d4906118ef565b604051633ddac95360e01b81526000906001600160a01b03831690633ddac95390611399908990899060040161175d565b60206040518083038186803b1580156113b157600080fd5b505afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e99190611690565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03161415611442576064600554826114359190611bf0565b61143f9190611bd0565b90505b9695505050505050565b600080856001600160a01b03166323b872dd86868660405160240161147393929190611739565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516114ac91906116a8565b6000604051808303816000865af19150503d80600081146114e9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ee565b606091505b50915091508180156115185750805115806115185750808060200190518101906115189190611658565b6115345760405162461bcd60e51b81526004016104d4906117c7565b505050505050565b60006020828403121561154d578081fd5b8135610a9381611c3c565b600060208284031215611569578081fd5b8151610a9381611c3c565b600080600060608486031215611588578182fd5b833561159381611c3c565b925060208401356115a381611c3c565b929592945050506040919091013590565b600080600080608085870312156115c9578081fd5b84356115d481611c3c565b935060208501356115e481611c3c565b93969395505050506040820135916060013590565b6000806040838503121561160b578182fd5b823561161681611c3c565b946020939093013593505050565b600080600060608486031215611638578283fd5b833561164381611c3c565b95602085013595506040909401359392505050565b600060208284031215611669578081fd5b81518015158114610a93578182fd5b600060208284031215611689578081fd5b5035919050565b6000602082840312156116a1578081fd5b5051919050565b60008251815b818110156116c857602081860181015185830152016116ae565b818111156116d65782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b6020808252600e908201527f4f766572666c6f772072616e6765000000000000000000000000000000000000604082015260600190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b60208082526024908201527f54686572652773206e6f2074776170206f7261636c6520666f722074686973206040820152633830b4b960e11b606082015260800190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b60208082526013908201527f4f766572666c6f77206d696e20616d6f756e7400000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b600082611beb57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c0a57611c0a611c26565b500290565b600082821015611c2157611c21611c26565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611c5157600080fd5b5056fea264697066735822122021606a7f7a205d68ade60b24af3d12f38579f5409ee6172501e663aa13ad3d3264736f6c63430008000033",
  "devdoc": {
    "details": "This smart contract is for getting CVR_ETH, CVR_USDT price",
    "kind": "dev",
    "methods": {
      "getNeededTokenAmount(address,address,uint256)": {
        "details": "Get needed _token0 amount for _desiredAmount of _token1"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapTokenWithETH(address,uint256,uint256)": {
        "params": {
          "_amount": ": this one is the value with decimals"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "discountPercentage()": {
        "notice": "when users try to use CVR to buy products, we will discount some percentage(25% at first stage)"
      },
      "getTokenAmountForETH(address,uint256)": {
        "notice": "get needed _token amount for _desiredAmount of ETH"
      },
      "getTokenAmountForUSDC(address,uint256)": {
        "notice": "get needed _token amount for _desiredAmount of USDC"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 534,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 647,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1613,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1617,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "availableCurrencies",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1629,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "SLIPPPAGE_RAGE",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1633,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "discountPercentage",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}