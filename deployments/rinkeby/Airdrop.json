{
  "address": "0x516Bc9ad2074c28cBC6Bb3a7f4786760641Be510",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_receivers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1fabbad83d172de219707e702dae0b4be57fb1a9229098d41bd3d23fab3b20f3",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x516Bc9ad2074c28cBC6Bb3a7f4786760641Be510",
    "transactionIndex": 2,
    "gasUsed": "525392",
    "logsBloom": "0x00000000000000000000000400000000000000000000000000800000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x5f4dcd44a08b4af3d7e418748d8b44593e9e3f1a5f10cc90c80a0a3c34c4a8ed",
    "transactionHash": "0x1fabbad83d172de219707e702dae0b4be57fb1a9229098d41bd3d23fab3b20f3",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 9827584,
        "transactionHash": "0x1fabbad83d172de219707e702dae0b4be57fb1a9229098d41bd3d23fab3b20f3",
        "address": "0x516Bc9ad2074c28cBC6Bb3a7f4786760641Be510",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x5f4dcd44a08b4af3d7e418748d8b44593e9e3f1a5f10cc90c80a0a3c34c4a8ed"
      }
    ],
    "blockNumber": 9827584,
    "cumulativeGasUsed": "910286",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a0d2d55f2bbc857784c2a47512b06797",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/libs/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2005ff7c65cd1282b2b470ea7b11782c9abaae62fbeacd100b8840d653c5f8e6\",\"license\":\"GPL-3.0-or-later\"},\"contracts/mocks/Airdrop.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../libs/TransferHelper.sol\\\";\\r\\n\\r\\ncontract Airdrop is Ownable {\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function airdrop(address[] memory _receivers, uint256[] memory _amounts, address _token, address _from) external onlyOwner {\\r\\n        require(_receivers.length == _amounts.length, \\\"Length should be equal\\\");\\r\\n        uint len = _receivers.length;\\r\\n        for (uint ii = 0; ii < len; ii++) {\\r\\n            TransferHelper.safeTransferFrom(_token, _from, _receivers[ii], _amounts[ii]);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd077b27973b2c99977d931bf5ab6c50cf179bd7b11bc6850294b1e4425c2aa16\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6108178061007d6000396000f3fe6080604052600436106100435760003560e01c806370239f731461004f578063715018a6146100715780638da5cb5b14610086578063f2fde38b146100b15761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046104d7565b6100d1565b005b34801561007d57600080fd5b5061006f6101bb565b34801561009257600080fd5b5061009b610251565b6040516100a8919061060f565b60405180910390f35b3480156100bd57600080fd5b5061006f6100cc3660046104b6565b610260565b6100d961032d565b6001600160a01b03166100ea610251565b6001600160a01b0316146101195760405162461bcd60e51b815260040161011090610721565b60405180910390fd5b825184511461013a5760405162461bcd60e51b8152600401610110906106ea565b835160005b818110156101b3576101a1848488848151811061016c57634e487b7160e01b600052603260045260246000fd5b602002602001015188858151811061019457634e487b7160e01b600052603260045260246000fd5b6020026020010151610331565b806101ab816107a4565b91505061013f565b505050505050565b6101c361032d565b6001600160a01b03166101d4610251565b6001600160a01b0316146101fa5760405162461bcd60e51b815260040161011090610721565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b61026861032d565b6001600160a01b0316610279610251565b6001600160a01b03161461029f5760405162461bcd60e51b815260040161011090610721565b6001600160a01b0381166102c55760405162461bcd60e51b815260040161011090610647565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b600080856001600160a01b03166323b872dd86868660405160240161035893929190610623565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103a691906105d6565b6000604051808303816000865af19150503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b509150915081801561041257508051158061041257508080602001905181019061041291906105b6565b6101b35760405162461bcd60e51b81526004016101109061068d565b80356001600160a01b038116811461044557600080fd5b919050565b600082601f83011261045a578081fd5b8135602061046f61046a83610780565b610756565b828152818101908583018385028701840188101561048b578586fd5b855b858110156104a95781358452928401929084019060010161048d565b5090979650505050505050565b6000602082840312156104c7578081fd5b6104d08261042e565b9392505050565b600080600080608085870312156104ec578283fd5b843567ffffffffffffffff80821115610503578485fd5b818701915087601f830112610516578485fd5b8135602061052661046a83610780565b82815281810190858301838502870184018d101561054257898afd5b8996505b8487101561056b576105578161042e565b835260019690960195918301918301610546565b5098505088013592505080821115610581578485fd5b5061058e8782880161044a565b93505061059d6040860161042e565b91506105ab6060860161042e565b905092959194509250565b6000602082840312156105c7578081fd5b815180151581146104d0578182fd5b60008251815b818110156105f657602081860181015185830152016105dc565b818111156106045782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526016908201527f4c656e6774682073686f756c6420626520657175616c00000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60405181810167ffffffffffffffff81118282101715610778576107786107cb565b604052919050565b600067ffffffffffffffff82111561079a5761079a6107cb565b5060209081020190565b60006000198214156107c457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b5e7bd71c62a6745210e5a26ebd5b5eff854567d0bdf83749ca9558ec599aff464736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c806370239f731461004f578063715018a6146100715780638da5cb5b14610086578063f2fde38b146100b15761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046104d7565b6100d1565b005b34801561007d57600080fd5b5061006f6101bb565b34801561009257600080fd5b5061009b610251565b6040516100a8919061060f565b60405180910390f35b3480156100bd57600080fd5b5061006f6100cc3660046104b6565b610260565b6100d961032d565b6001600160a01b03166100ea610251565b6001600160a01b0316146101195760405162461bcd60e51b815260040161011090610721565b60405180910390fd5b825184511461013a5760405162461bcd60e51b8152600401610110906106ea565b835160005b818110156101b3576101a1848488848151811061016c57634e487b7160e01b600052603260045260246000fd5b602002602001015188858151811061019457634e487b7160e01b600052603260045260246000fd5b6020026020010151610331565b806101ab816107a4565b91505061013f565b505050505050565b6101c361032d565b6001600160a01b03166101d4610251565b6001600160a01b0316146101fa5760405162461bcd60e51b815260040161011090610721565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b61026861032d565b6001600160a01b0316610279610251565b6001600160a01b03161461029f5760405162461bcd60e51b815260040161011090610721565b6001600160a01b0381166102c55760405162461bcd60e51b815260040161011090610647565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b600080856001600160a01b03166323b872dd86868660405160240161035893929190610623565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103a691906105d6565b6000604051808303816000865af19150503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b509150915081801561041257508051158061041257508080602001905181019061041291906105b6565b6101b35760405162461bcd60e51b81526004016101109061068d565b80356001600160a01b038116811461044557600080fd5b919050565b600082601f83011261045a578081fd5b8135602061046f61046a83610780565b610756565b828152818101908583018385028701840188101561048b578586fd5b855b858110156104a95781358452928401929084019060010161048d565b5090979650505050505050565b6000602082840312156104c7578081fd5b6104d08261042e565b9392505050565b600080600080608085870312156104ec578283fd5b843567ffffffffffffffff80821115610503578485fd5b818701915087601f830112610516578485fd5b8135602061052661046a83610780565b82815281810190858301838502870184018d101561054257898afd5b8996505b8487101561056b576105578161042e565b835260019690960195918301918301610546565b5098505088013592505080821115610581578485fd5b5061058e8782880161044a565b93505061059d6040860161042e565b91506105ab6060860161042e565b905092959194509250565b6000602082840312156105c7578081fd5b815180151581146104d0578182fd5b60008251815b818110156105f657602081860181015185830152016105dc565b818111156106045782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526016908201527f4c656e6774682073686f756c6420626520657175616c00000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60405181810167ffffffffffffffff81118282101715610778576107786107cb565b604052919050565b600067ffffffffffffffff82111561079a5761079a6107cb565b5060209081020190565b60006000198214156107c457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b5e7bd71c62a6745210e5a26ebd5b5eff854567d0bdf83749ca9558ec599aff464736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 534,
        "contract": "contracts/mocks/Airdrop.sol:Airdrop",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}