{
  "address": "0x1eEF7bF547aC2EFeFd2B0582d208Bef5ae0d92d6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDC_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UNISWAP_FACTORY",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "AddedGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "RemovedCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "RemovedGateway",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "SetCurrency",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAsset",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNISWAP_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "addCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getETHAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getNeededTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "getTokenAmountForUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "removeCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gateway",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xea24eaf1c24afe508b616a9d61685035b149cdb4e39664af451c2d56859b24c4",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x1eEF7bF547aC2EFeFd2B0582d208Bef5ae0d92d6",
    "transactionIndex": 1,
    "gasUsed": "1449295",
    "logsBloom": "0x
    "blockHash": "0xfb824ad790cedcd7c64b7f1ab4fa60025116c2ddd1ce32c868f4ebaaa6080e6b",
    "transactionHash": "0xea24eaf1c24afe508b616a9d61685035b149cdb4e39664af451c2d56859b24c4",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 9642027,
        "transactionHash": "0xea24eaf1c24afe508b616a9d61685035b149cdb4e39664af451c2d56859b24c4",
        "address": "0x1eEF7bF547aC2EFeFd2B0582d208Bef5ae0d92d6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xfb824ad790cedcd7c64b7f1ab4fa60025116c2ddd1ce32c868f4ebaaa6080e6b"
      }
    ],
    "blockNumber": 9642027,
    "cumulativeGasUsed": "1592131",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4D5c5D939A173b9c18a6B72eEaffD98ecF8b3F6",
    "0xc778417e063141139fce010982780140aa0cd5ab",
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
  ],
  "solcInputHash": "fa6d6912e2f3030ad3e1ecd6660fb3b8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UNISWAP_FACTORY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"AddedGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"RemovedCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"RemovedGateway\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"SetCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAsset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getETHAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getNeededTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_desiredAmount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountForUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This smart contract is for getting CVR_ETH, CVR_USDT price\",\"kind\":\"dev\",\"methods\":{\"getNeededTokenAmount(address,address,uint256)\":{\"details\":\"Get needed _token0 amount for _desiredAmount of _token1\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapTokenWithETH(address,uint256)\":{\"params\":{\"_amount\":\": this one is the value with decimals\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeAgent.sol\":\"ExchangeAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/ExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./libs/TransferHelper.sol\\\";\\nimport {IUniswapV2Pair} from \\\"./interfaces/IUniswapV2Pair.sol\\\";\\nimport {IUniswapV2Factory} from \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"./interfaces/IExchangeAgent.sol\\\";\\n\\n/**\\n * @dev This smart contract is for getting CVR_ETH, CVR_USDT price\\n */\\ncontract ExchangeAgent is Ownable, IExchangeAgent, ReentrancyGuard {\\n    event AddedGateway(address _sender, address _gateway);\\n    event RemovedGateway(address _sender, address _gateway);\\n    event SetCurrency(address _sender, address _currency, address _pair);\\n    event RemovedCurrency(address _sender, address _currency);\\n    event WithdrawAsset(address _user, address _to, address _token, uint256 _amount);\\n\\n    mapping(address => bool) public whiteList; // white listed polka gateways\\n    // available currencies in Polkacover, token => pair\\n    // for now we allow CVR\\n    mapping(address => bool) public availableCurrencies;\\n\\n    address public immutable USDC_ADDRESS;\\n    address public immutable WETH;\\n    address public immutable UNISWAP_FACTORY;\\n\\n    constructor(\\n        address _USDC_ADDRESS,\\n        address _WETH,\\n        address _UNISWAP_FACTORY\\n    ) {\\n        USDC_ADDRESS = _USDC_ADDRESS;\\n        WETH = _WETH;\\n        UNISWAP_FACTORY = _UNISWAP_FACTORY;\\n    }\\n\\n    receive() external payable {}\\n\\n    modifier onlyWhiteListed(address _gateway) {\\n        require(whiteList[_gateway], \\\"Only white listed addresses are acceptable\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     */\\n    function _getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) private view returns (uint256) {\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address token0 = IUniswapV2Pair(pair).token0();\\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\\n\\n        uint256 denominator;\\n        uint256 numerator;\\n        if (_token0 == token0) {\\n            denominator = reserve1;\\n            numerator = reserve0 * _desiredAmount;\\n        } else {\\n            denominator = reserve0;\\n            numerator = reserve1 * _desiredAmount;\\n        }\\n\\n        return numerator / denominator;\\n    }\\n\\n    /**\\n     * @dev Get needed _token0 amount for _desiredAmount of _token1\\n     */\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token0, _token1, _desiredAmount);\\n    }\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(WETH, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, USDC_ADDRESS, _desiredAmount);\\n    }\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external view override returns (uint256) {\\n        return _getNeededTokenAmount(_token, WETH, _desiredAmount);\\n    }\\n\\n    /**\\n     * @param _amount: this one is the value with decimals\\n     */\\n    function swapTokenWithETH(address _token, uint256 _amount) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        // store CVR in this exchagne contract\\n        // send eth to buy gateway based on the uniswap price\\n        require(availableCurrencies[_token], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token, WETH, _amount);\\n    }\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external override onlyWhiteListed(msg.sender) nonReentrant {\\n        require(availableCurrencies[_token0], \\\"Token should be added in available list\\\");\\n        _swapTokenWithToken(_token0, _token1, _amount);\\n    }\\n\\n    /**\\n     * @dev exchange _amount of _token0 with _token1\\n     */\\n    function _swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) private {\\n        address pair = IUniswapV2Factory(UNISWAP_FACTORY).getPair(_token0, _token1);\\n        require(pair != address(0), \\\"There's no pair\\\");\\n\\n        address token0 = IUniswapV2Pair(pair).token0();\\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\\n\\n        uint256 denominator;\\n        uint256 numerator;\\n        if (_token0 == token0) {\\n            denominator = reserve0;\\n            numerator = reserve1 * _amount;\\n        } else {\\n            denominator = reserve1;\\n            numerator = reserve0 * _amount;\\n        }\\n\\n        uint256 value = numerator / denominator;\\n        require(value <= address(this).balance, \\\"Insufficient ETH balance\\\");\\n\\n        TransferHelper.safeTransferFrom(_token0, msg.sender, address(this), _amount);\\n\\n        if (_token1 == WETH) {\\n            TransferHelper.safeTransferETH(msg.sender, value);\\n        } else {\\n            TransferHelper.safeTransfer(_token1, msg.sender, value);\\n        }\\n    }\\n\\n    function addWhiteList(address _gateway) external onlyOwner {\\n        require(!whiteList[_gateway], \\\"Already white listed\\\");\\n        whiteList[_gateway] = true;\\n    }\\n\\n    function removeWhiteList(address _gateway) external onlyOwner {\\n        require(whiteList[_gateway], \\\"Not white listed\\\");\\n        whiteList[_gateway] = false;\\n    }\\n\\n    function addCurrency(address _currency) external onlyOwner {\\n        require(!availableCurrencies[_currency], \\\"Already available\\\");\\n        availableCurrencies[_currency] = true;\\n    }\\n\\n    function removeCurrency(address _currency) external onlyOwner {\\n        require(availableCurrencies[_currency], \\\"Not available yet\\\");\\n        availableCurrencies[_currency] = false;\\n    }\\n\\n    function withdrawAsset(\\n        address _to,\\n        address _token,\\n        uint256 _amount\\n    ) external onlyOwner {\\n        if (_token == address(0)) {\\n            TransferHelper.safeTransferETH(_to, _amount);\\n        } else {\\n            TransferHelper.safeTransfer(_token, _to, _amount);\\n        }\\n        emit WithdrawAsset(owner(), _to, _token, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x12ee5e72326b64330cf21b28970f88a8e866b1d5001b9512f1728942b8efb7df\",\"license\":\"MIT\"},\"contracts/interfaces/IExchangeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\ninterface IExchangeAgent {\\n    function getNeededTokenAmount(\\n        address _token0,\\n        address _token1,\\n        uint256 _desiredAmount\\n    ) external returns (uint256);\\n\\n    function getTokenAmountForUSDC(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function getETHAmountForUSDC(uint256 _desiredAmount) external view returns (uint256);\\n\\n    function getTokenAmountForETH(address _token, uint256 _desiredAmount) external returns (uint256);\\n\\n    function swapTokenWithETH(address _token, uint256 _amount) external;\\n\\n    function swapTokenWithToken(\\n        address _token0,\\n        address _token1,\\n        uint256 _amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6b3a247450082bf7e12ca27c13685885e56e396192d91ddd24820f9e6562cd6a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\ninterface IUniswapV2Factory {\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\\n\",\"keccak256\":\"0x6e5250dccf1ed00969b6f3b3616bbd50744d62d0fcd7a024c0e03ebc765b4794\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Pair {\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n}\\n\",\"keccak256\":\"0xca87cafa76fac381b9df7c9b68274f869ef4c76296d754b01bd998b889428f3f\",\"license\":\"MIT\"},\"contracts/libs/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2005ff7c65cd1282b2b470ea7b11782c9abaae62fbeacd100b8840d653c5f8e6\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620019f3380380620019f38339810160408190526200003491620000d7565b600062000040620000b6565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180556001600160601b0319606093841b811660805291831b821660a05290911b1660c05262000120565b3390565b80516001600160a01b0381168114620000d257600080fd5b919050565b600080600060608486031215620000ec578283fd5b620000f784620000ba565b92506200010760208501620000ba565b91506200011760408501620000ba565b90509250925092565b60805160601c60a05160601c60c05160601c611862620001916000396000818161094f01528181610c620152610e9901526000818161051601528181610733015281816108420152818161086c01526110c501526000818161053701528181610814015261089301526118626000f3fe6080604052600436106101185760003560e01c80638ab234b6116100a0578063bb09d9b711610064578063bb09d9b7146102f5578063c5d3a1071461030a578063c74c0fac1461032a578063e7cd4a041461033f578063f2fde38b1461035f5761011f565b80638ab234b61461025e5780638da5cb5b1461027e578063a9a12d43146102a0578063ad5c4648146102c0578063ba560ed9146102d55761011f565b8063372c12b1116100e7578063372c12b1146101c9578063531a2211146101e95780636e85a5ab14610209578063715018a61461022957806378cb71711461023e5761011f565b8063092ae4dc146101245780631af42c0f146101465780632042e5c21461017c57806334899be61461019c5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611262565b61037f565b005b34801561015257600080fd5b5061016661016136600461122a565b610438565b6040516101739190611421565b60405180910390f35b34801561018857600080fd5b5061014461019736600461122a565b61044d565b3480156101a857600080fd5b506101bc6101b7366004611262565b6104e5565b60405161017391906117c0565b3480156101d557600080fd5b506101666101e436600461122a565b6104fa565b3480156101f557600080fd5b506101bc61020436600461133b565b61050f565b34801561021557600080fd5b50610144610224366004611262565b610564565b34801561023557600080fd5b50610144610608565b34801561024a57600080fd5b506101446102593660046112a2565b61069e565b34801561026a57600080fd5b5061014461027936600461122a565b610761565b34801561028a57600080fd5b506102936107fd565b604051610173919061138c565b3480156102ac57600080fd5b506101bc6102bb3660046112a2565b61080c565b3480156102cc57600080fd5b50610293610840565b3480156102e157600080fd5b506101bc6102f03660046112a2565b610864565b34801561030157600080fd5b50610293610891565b34801561031657600080fd5b5061014461032536600461122a565b6108b5565b34801561033657600080fd5b5061029361094d565b34801561034b57600080fd5b5061014461035a36600461122a565b610971565b34801561036b57600080fd5b5061014461037a36600461122a565b610a0d565b610387610ada565b6001600160a01b03166103986107fd565b6001600160a01b0316146103c75760405162461bcd60e51b81526004016103be90611608565b60405180910390fd5b6001600160a01b0382166103e4576103df8382610ade565b6103ef565b6103ef828483610b70565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf246104186107fd565b84848460405161042b94939291906113ba565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610455610ada565b6001600160a01b03166104666107fd565b6001600160a01b03161461048c5760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526002602052604090205460ff166104c45760405162461bcd60e51b81526004016103be90611674565b6001600160a01b03166000908152600260205260409020805460ff19169055565b60006104f2848484610c5d565b949350505050565b60026020526000908152604090205460ff1681565b600061055c7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610c5d565b90505b919050565b3360008181526002602052604090205460ff166105935760405162461bcd60e51b81526004016103be90611776565b600260015414156105b65760405162461bcd60e51b81526004016103be9061173f565b60026001556001600160a01b03841660009081526003602052604090205460ff166105f35760405162461bcd60e51b81526004016103be906116f8565b6105fe848484610e7f565b5050600180555050565b610610610ada565b6001600160a01b03166106216107fd565b6001600160a01b0316146106475760405162461bcd60e51b81526004016103be90611608565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b3360008181526002602052604090205460ff166106cd5760405162461bcd60e51b81526004016103be90611776565b600260015414156106f05760405162461bcd60e51b81526004016103be9061173f565b60026001556001600160a01b03831660009081526003602052604090205460ff1661072d5760405162461bcd60e51b81526004016103be906116f8565b610758837f000000000000000000000000000000000000000000000000000000000000000084610e7f565b50506001805550565b610769610ada565b6001600160a01b031661077a6107fd565b6001600160a01b0316146107a05760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526003602052604090205460ff16156107d95760405162461bcd60e51b81526004016103be9061152c565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6000546001600160a01b031690565b6000610839837f000000000000000000000000000000000000000000000000000000000000000084610c5d565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610839837f000000000000000000000000000000000000000000000000000000000000000084610c5d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108bd610ada565b6001600160a01b03166108ce6107fd565b6001600160a01b0316146108f45760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526003602052604090205460ff1661092c5760405162461bcd60e51b81526004016103be9061163d565b6001600160a01b03166000908152600360205260409020805460ff19169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b610979610ada565b6001600160a01b031661098a6107fd565b6001600160a01b0316146109b05760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526002602052604090205460ff16156109e95760405162461bcd60e51b81526004016103be9061159a565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610a15610ada565b6001600160a01b0316610a266107fd565b6001600160a01b031614610a4c5760405162461bcd60e51b81526004016103be90611608565b6001600160a01b038116610a725760405162461bcd60e51b81526004016103be9061142c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610b089190611353565b60006040518083038185875af1925050503d8060008114610b45576040519150601f19603f3d011682016040523d82523d6000602084013e610b4a565b606091505b5050905080610b6b5760405162461bcd60e51b81526004016103be906114cf565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610b95929190611408565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610bce9190611353565b6000604051808303816000865af19150503d8060008114610c0b576040519150601f19603f3d011682016040523d82523d6000602084013e610c10565b606091505b5091509150818015610c3a575080511580610c3a575080806020019051810190610c3a91906112cd565b610c565760405162461bcd60e51b81526004016103be906116ab565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610cae9291906113a0565b60206040518083038186803b158015610cc657600080fd5b505afa158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe9190611246565b90506001600160a01b038116610d265760405162461bcd60e51b81526004016103be90611563565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6157600080fd5b505afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d999190611246565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610dd757600080fd5b505afa158015610deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0f91906112ed565b506001600160701b031691506001600160701b03169150600080846001600160a01b03168a6001600160a01b03161415610e5757829150610e5088856117e9565b9050610e67565b839150610e6488846117e9565b90505b610e7182826117c9565b9a9950505050505050505050565b60405163e6a4390560e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590610ed090879087906004016113a0565b60206040518083038186803b158015610ee857600080fd5b505afa158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190611246565b90506001600160a01b038116610f485760405162461bcd60e51b81526004016103be90611563565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8357600080fd5b505afa158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb9190611246565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ff957600080fd5b505afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103191906112ed565b506001600160701b031691506001600160701b03169150600080846001600160a01b0316896001600160a01b031614156110795783915061107287846117e9565b9050611089565b82915061108687856117e9565b90505b600061109583836117c9565b9050478111156110b75760405162461bcd60e51b81526004016103be906115d1565b6110c38a33308b611123565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316896001600160a01b0316141561110c576111073382610ade565b611117565b611117893383610b70565b50505050505050505050565b600080856001600160a01b03166323b872dd86868660405160240161114a939291906113e4565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516111839190611353565b6000604051808303816000865af19150503d80600081146111c0576040519150601f19603f3d011682016040523d82523d6000602084013e6111c5565b606091505b50915091508180156111ef5750805115806111ef5750808060200190518101906111ef91906112cd565b61120b5760405162461bcd60e51b81526004016103be90611472565b505050505050565b80516001600160701b038116811461055f57600080fd5b60006020828403121561123b578081fd5b813561083981611814565b600060208284031215611257578081fd5b815161083981611814565b600080600060608486031215611276578182fd5b833561128181611814565b9250602084013561129181611814565b929592945050506040919091013590565b600080604083850312156112b4578182fd5b82356112bf81611814565b946020939093013593505050565b6000602082840312156112de578081fd5b81518015158114610839578182fd5b600080600060608486031215611301578283fd5b61130a84611213565b925061131860208501611213565b9150604084015163ffffffff81168114611330578182fd5b809150509250925092565b60006020828403121561134c578081fd5b5035919050565b60008251815b818110156113735760208186018101518583015201611359565b818111156113815782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6000826117e457634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561180f57634e487b7160e01b81526011600452602481fd5b500290565b6001600160a01b038116811461182957600080fd5b5056fea26469706673582212205c9abfe73d4fda9f9c7ef7dd03074562241f0d7e0aa127afc36eb2f843277bbf64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101185760003560e01c80638ab234b6116100a0578063bb09d9b711610064578063bb09d9b7146102f5578063c5d3a1071461030a578063c74c0fac1461032a578063e7cd4a041461033f578063f2fde38b1461035f5761011f565b80638ab234b61461025e5780638da5cb5b1461027e578063a9a12d43146102a0578063ad5c4648146102c0578063ba560ed9146102d55761011f565b8063372c12b1116100e7578063372c12b1146101c9578063531a2211146101e95780636e85a5ab14610209578063715018a61461022957806378cb71711461023e5761011f565b8063092ae4dc146101245780631af42c0f146101465780632042e5c21461017c57806334899be61461019c5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611262565b61037f565b005b34801561015257600080fd5b5061016661016136600461122a565b610438565b6040516101739190611421565b60405180910390f35b34801561018857600080fd5b5061014461019736600461122a565b61044d565b3480156101a857600080fd5b506101bc6101b7366004611262565b6104e5565b60405161017391906117c0565b3480156101d557600080fd5b506101666101e436600461122a565b6104fa565b3480156101f557600080fd5b506101bc61020436600461133b565b61050f565b34801561021557600080fd5b50610144610224366004611262565b610564565b34801561023557600080fd5b50610144610608565b34801561024a57600080fd5b506101446102593660046112a2565b61069e565b34801561026a57600080fd5b5061014461027936600461122a565b610761565b34801561028a57600080fd5b506102936107fd565b604051610173919061138c565b3480156102ac57600080fd5b506101bc6102bb3660046112a2565b61080c565b3480156102cc57600080fd5b50610293610840565b3480156102e157600080fd5b506101bc6102f03660046112a2565b610864565b34801561030157600080fd5b50610293610891565b34801561031657600080fd5b5061014461032536600461122a565b6108b5565b34801561033657600080fd5b5061029361094d565b34801561034b57600080fd5b5061014461035a36600461122a565b610971565b34801561036b57600080fd5b5061014461037a36600461122a565b610a0d565b610387610ada565b6001600160a01b03166103986107fd565b6001600160a01b0316146103c75760405162461bcd60e51b81526004016103be90611608565b60405180910390fd5b6001600160a01b0382166103e4576103df8382610ade565b6103ef565b6103ef828483610b70565b7f37e6496681d2c16ab49733a2a6cf0916ebaa3e90250d01f84cec59f546d8cf246104186107fd565b84848460405161042b94939291906113ba565b60405180910390a1505050565b60036020526000908152604090205460ff1681565b610455610ada565b6001600160a01b03166104666107fd565b6001600160a01b03161461048c5760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526002602052604090205460ff166104c45760405162461bcd60e51b81526004016103be90611674565b6001600160a01b03166000908152600260205260409020805460ff19169055565b60006104f2848484610c5d565b949350505050565b60026020526000908152604090205460ff1681565b600061055c7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610c5d565b90505b919050565b3360008181526002602052604090205460ff166105935760405162461bcd60e51b81526004016103be90611776565b600260015414156105b65760405162461bcd60e51b81526004016103be9061173f565b60026001556001600160a01b03841660009081526003602052604090205460ff166105f35760405162461bcd60e51b81526004016103be906116f8565b6105fe848484610e7f565b5050600180555050565b610610610ada565b6001600160a01b03166106216107fd565b6001600160a01b0316146106475760405162461bcd60e51b81526004016103be90611608565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b3360008181526002602052604090205460ff166106cd5760405162461bcd60e51b81526004016103be90611776565b600260015414156106f05760405162461bcd60e51b81526004016103be9061173f565b60026001556001600160a01b03831660009081526003602052604090205460ff1661072d5760405162461bcd60e51b81526004016103be906116f8565b610758837f000000000000000000000000000000000000000000000000000000000000000084610e7f565b50506001805550565b610769610ada565b6001600160a01b031661077a6107fd565b6001600160a01b0316146107a05760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526003602052604090205460ff16156107d95760405162461bcd60e51b81526004016103be9061152c565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6000546001600160a01b031690565b6000610839837f000000000000000000000000000000000000000000000000000000000000000084610c5d565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610839837f000000000000000000000000000000000000000000000000000000000000000084610c5d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108bd610ada565b6001600160a01b03166108ce6107fd565b6001600160a01b0316146108f45760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526003602052604090205460ff1661092c5760405162461bcd60e51b81526004016103be9061163d565b6001600160a01b03166000908152600360205260409020805460ff19169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b610979610ada565b6001600160a01b031661098a6107fd565b6001600160a01b0316146109b05760405162461bcd60e51b81526004016103be90611608565b6001600160a01b03811660009081526002602052604090205460ff16156109e95760405162461bcd60e51b81526004016103be9061159a565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610a15610ada565b6001600160a01b0316610a266107fd565b6001600160a01b031614610a4c5760405162461bcd60e51b81526004016103be90611608565b6001600160a01b038116610a725760405162461bcd60e51b81526004016103be9061142c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b604080516000808252602082019092526001600160a01b038416908390604051610b089190611353565b60006040518083038185875af1925050503d8060008114610b45576040519150601f19603f3d011682016040523d82523d6000602084013e610b4a565b606091505b5050905080610b6b5760405162461bcd60e51b81526004016103be906114cf565b505050565b600080846001600160a01b031663a9059cbb8585604051602401610b95929190611408565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610bce9190611353565b6000604051808303816000865af19150503d8060008114610c0b576040519150601f19603f3d011682016040523d82523d6000602084013e610c10565b606091505b5091509150818015610c3a575080511580610c3a575080806020019051810190610c3a91906112cd565b610c565760405162461bcd60e51b81526004016103be906116ab565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b8152600401610cae9291906113a0565b60206040518083038186803b158015610cc657600080fd5b505afa158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe9190611246565b90506001600160a01b038116610d265760405162461bcd60e51b81526004016103be90611563565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6157600080fd5b505afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d999190611246565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610dd757600080fd5b505afa158015610deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0f91906112ed565b506001600160701b031691506001600160701b03169150600080846001600160a01b03168a6001600160a01b03161415610e5757829150610e5088856117e9565b9050610e67565b839150610e6488846117e9565b90505b610e7182826117c9565b9a9950505050505050505050565b60405163e6a4390560e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590610ed090879087906004016113a0565b60206040518083038186803b158015610ee857600080fd5b505afa158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190611246565b90506001600160a01b038116610f485760405162461bcd60e51b81526004016103be90611563565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8357600080fd5b505afa158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb9190611246565b9050600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ff957600080fd5b505afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103191906112ed565b506001600160701b031691506001600160701b03169150600080846001600160a01b0316896001600160a01b031614156110795783915061107287846117e9565b9050611089565b82915061108687856117e9565b90505b600061109583836117c9565b9050478111156110b75760405162461bcd60e51b81526004016103be906115d1565b6110c38a33308b611123565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316896001600160a01b0316141561110c576111073382610ade565b611117565b611117893383610b70565b50505050505050505050565b600080856001600160a01b03166323b872dd86868660405160240161114a939291906113e4565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516111839190611353565b6000604051808303816000865af19150503d80600081146111c0576040519150601f19603f3d011682016040523d82523d6000602084013e6111c5565b606091505b50915091508180156111ef5750805115806111ef5750808060200190518101906111ef91906112cd565b61120b5760405162461bcd60e51b81526004016103be90611472565b505050505050565b80516001600160701b038116811461055f57600080fd5b60006020828403121561123b578081fd5b813561083981611814565b600060208284031215611257578081fd5b815161083981611814565b600080600060608486031215611276578182fd5b833561128181611814565b9250602084013561129181611814565b929592945050506040919091013590565b600080604083850312156112b4578182fd5b82356112bf81611814565b946020939093013593505050565b6000602082840312156112de578081fd5b81518015158114610839578182fd5b600080600060608486031215611301578283fd5b61130a84611213565b925061131860208501611213565b9150604084015163ffffffff81168114611330578182fd5b809150509250925092565b60006020828403121561134c578081fd5b5035919050565b60008251815b818110156113735760208186018101518583015201611359565b818111156113815782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526011908201527f416c726561647920617661696c61626c65000000000000000000000000000000604082015260600190565b6020808252600f908201527f54686572652773206e6f20706169720000000000000000000000000000000000604082015260600190565b60208082526014908201527f416c7265616479207768697465206c6973746564000000000000000000000000604082015260600190565b60208082526018908201527f496e73756666696369656e74204554482062616c616e63650000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f4e6f7420617661696c61626c6520796574000000000000000000000000000000604082015260600190565b60208082526010908201527f4e6f74207768697465206c697374656400000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b60208082526027908201527f546f6b656e2073686f756c6420626520616464656420696e20617661696c61626040820152661b19481b1a5cdd60ca1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f4f6e6c79207768697465206c697374656420616464726573736573206172652060408201526961636365707461626c6560b01b606082015260800190565b90815260200190565b6000826117e457634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561180f57634e487b7160e01b81526011600452602481fd5b500290565b6001600160a01b038116811461182957600080fd5b5056fea26469706673582212205c9abfe73d4fda9f9c7ef7dd03074562241f0d7e0aa127afc36eb2f843277bbf64736f6c63430008000033",
  "devdoc": {
    "details": "This smart contract is for getting CVR_ETH, CVR_USDT price",
    "kind": "dev",
    "methods": {
      "getNeededTokenAmount(address,address,uint256)": {
        "details": "Get needed _token0 amount for _desiredAmount of _token1"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapTokenWithETH(address,uint256)": {
        "params": {
          "_amount": ": this one is the value with decimals"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 534,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 647,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1601,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "whiteList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1605,
        "contract": "contracts/ExchangeAgent.sol:ExchangeAgent",
        "label": "availableCurrencies",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}