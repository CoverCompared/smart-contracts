{
  "address": "0x01e116289819bFb500505C89F1AcdF27200a8670",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_numConfirmationsRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ConfirmTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        }
      ],
      "name": "RevokeConfirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "txIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SubmitTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_execute",
          "type": "bool"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numConfirmationsRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbea12bbfa22c1a730d90657f87d2b1c1fed14168506c38caf1e6caf185c72555",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x01e116289819bFb500505C89F1AcdF27200a8670",
    "transactionIndex": 0,
    "gasUsed": "1283528",
    "logsBloom": "0x
    "blockHash": "0x5278e6e8ea35669dafe167882106632902e41651eb1bd3321e49bb4c4aeb0dbe",
    "transactionHash": "0xbea12bbfa22c1a730d90657f87d2b1c1fed14168506c38caf1e6caf185c72555",
    "logs": [],
    "blockNumber": 28393254,
    "cumulativeGasUsed": "1283528",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x396FA529e1B1D9582f5016511A88a7BA28190965",
      "0x1Df437DE4C327CE210A18FF25EbB7322AEA50095",
      "0xC7D822328aC1e28a82B1b333ac077511B050fc9F",
      "0x15C1e78536F761B2FeD10f1EcDb6db6B4D1E5d5F"
    ],
    2
  ],
  "solcInputHash": "b9f5be885696f0e623502845256d15e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"RevokeConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_execute\",\"type\":\"bool\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeTransaction(uint256)\":{\"details\":\"We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations\"},\"submitTransaction(address,uint256,bytes)\":{\"details\":\"when buying is failed, agent should send loan again to TribeOne.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"contracts/libs/MultiSigWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract MultiSigWallet is ReentrancyGuard {\\n    event Deposit(address indexed sender, uint256 amount, uint256 balance);\\n    event SubmitTransaction(address indexed signer, uint256 indexed txIndex, address indexed to, uint256 value, bytes data);\\n    event ConfirmTransaction(address indexed signer, uint256 indexed txIndex);\\n    event RevokeConfirmation(address indexed signer, uint256 indexed txIndex);\\n    event ExecuteTransaction(address indexed signer, uint256 indexed txIndex);\\n\\n    address[] public signers;\\n    mapping(address => bool) public isSigner;\\n    uint256 public numConfirmationsRequired;\\n\\n    struct Transaction {\\n        address to;\\n        uint256 value;\\n        bytes data;\\n        bool executed;\\n        uint256 numConfirmations;\\n    }\\n\\n    // mapping from tx index => signer => bool\\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\\n\\n    Transaction[] private transactions;\\n\\n    modifier onlySigner() {\\n        require(isSigner[msg.sender], \\\"not signer\\\");\\n        _;\\n    }\\n\\n    modifier txExists(uint256 _txIndex) {\\n        require(_txIndex < transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier notExecuted(uint256 _txIndex) {\\n        require(!transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint256 _txIndex) {\\n        require(!isConfirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    constructor(address[] memory _signers, uint256 _numConfirmationsRequired) {\\n        require(_signers.length > 0, \\\"signers required\\\");\\n        require(\\n            _numConfirmationsRequired > 0 && _numConfirmationsRequired <= _signers.length,\\n            \\\"invalid number of required confirmations\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _signers.length; i++) {\\n            address signer = _signers[i];\\n\\n            require(signer != address(0), \\\"invalid signer\\\");\\n            require(!isSigner[signer], \\\"signer not unique\\\");\\n\\n            isSigner[signer] = true;\\n            signers.push(signer);\\n        }\\n\\n        numConfirmationsRequired = _numConfirmationsRequired;\\n    }\\n\\n    receive() external payable {\\n        emit Deposit(msg.sender, msg.value, address(this).balance);\\n    }\\n\\n    /**\\n     * @dev when buying is failed, agent should send loan again to TribeOne.\\n     */\\n    function submitTransaction(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) public payable onlySigner nonReentrant {\\n        if (_value > 0) {\\n            require(msg.value == _value, \\\"Should send value\\\");\\n        }\\n        uint256 txIndex = transactions.length;\\n\\n        transactions.push(Transaction({to: _to, value: _value, data: _data, executed: false, numConfirmations: 0}));\\n\\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\\n    }\\n\\n    function confirmTransaction(uint256 _txIndex, bool _execute)\\n        public\\n        onlySigner\\n        txExists(_txIndex)\\n        notExecuted(_txIndex)\\n        notConfirmed(_txIndex)\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n        isConfirmed[_txIndex][msg.sender] = true;\\n        transaction.numConfirmations += 1;\\n\\n        emit ConfirmTransaction(msg.sender, _txIndex);\\n\\n        if (transaction.numConfirmations >= numConfirmationsRequired && _execute) {\\n            _executeTransaction(_txIndex);\\n        }\\n    }\\n\\n    /**\\n     * @dev We did not add onlySigner modifier here, because we want to allow any community member to execute transaction\\n     * which had got at least minimum number of confirmations\\n     */\\n    function executeTransaction(uint256 _txIndex) external {\\n        _executeTransaction(_txIndex);\\n    }\\n\\n    function _executeTransaction(uint256 _txIndex) private txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(transaction.numConfirmations >= numConfirmationsRequired, \\\"cannot execute tx\\\");\\n\\n        transaction.executed = true;\\n\\n        (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data);\\n        require(success, \\\"tx failed\\\");\\n\\n        emit ExecuteTransaction(msg.sender, _txIndex);\\n    }\\n\\n    function revokeConfirmation(uint256 _txIndex) public onlySigner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(isConfirmed[_txIndex][msg.sender], \\\"tx not confirmed\\\");\\n\\n        transaction.numConfirmations -= 1;\\n        isConfirmed[_txIndex][msg.sender] = false;\\n\\n        emit RevokeConfirmation(msg.sender, _txIndex);\\n    }\\n\\n    function getSigners() public view returns (address[] memory) {\\n        return signers;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactions.length;\\n    }\\n\\n    function getTransaction(uint256 _txIndex)\\n        public\\n        view\\n        returns (\\n            address to,\\n            uint256 value,\\n            bytes memory data,\\n            bool executed,\\n            uint256 numConfirmations\\n        )\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        return (transaction.to, transaction.value, transaction.data, transaction.executed, transaction.numConfirmations);\\n    }\\n}\\n\",\"keccak256\":\"0x8d7b7a1c402bb8640271d8faa5fb3015ba97d953d9d673e044edc2970c3ab66d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001548380380620015488339810160408190526200003491620001de565b60016000558151620000635760405162461bcd60e51b81526004016200005a90620002dc565b60405180910390fd5b60008111801562000075575081518111155b620000945760405162461bcd60e51b81526004016200005a9062000331565b60005b8251811015620001b6576000838281518110620000c457634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006001600160a01b0316816001600160a01b03161415620001045760405162461bcd60e51b81526004016200005a90620002b4565b6001600160a01b03811660009081526002602052604090205460ff1615620001405760405162461bcd60e51b81526004016200005a9062000306565b6001600160a01b03166000818152600260205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916909117905580620001ad8162000379565b91505062000097565b5060035550620003b7565b80516001600160a01b0381168114620001d957600080fd5b919050565b60008060408385031215620001f1578182fd5b82516001600160401b038082111562000208578384fd5b818501915085601f8301126200021c578384fd5b8151602082821115620002335762000233620003a1565b80820260405182828201018181108682111715620002555762000255620003a1565b604052838152828101945085830182870184018b101562000274578889fd5b8896505b84871015620002a1576200028c81620001c1565b86526001969096019594830194830162000278565b5097909101519698969750505050505050565b6020808252600e908201526d34b73b30b634b21039b4b3b732b960911b604082015260600190565b60208082526010908201526f1cda59db995c9cc81c995c5d5a5c995960821b604082015260600190565b6020808252601190820152707369676e6572206e6f7420756e6971756560781b604082015260600190565b60208082526028908201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604082015267726d6174696f6e7360c01b606082015260800190565b60006000198214156200039a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b61118180620003c76000396000f3fe6080604052600436106100b05760003560e01c806380f59a6511610074578063c6a725d81161004e578063c6a725d81461022c578063d0549b851461024c578063ee22610b14610261576100fa565b806380f59a65146101d757806394cf795e146101f7578063c642747414610219576100fa565b80632079fb9a146100ff57806320ea8d86146101355780632e7700f01461015757806333ea3dc8146101795780637df73e27146101aa576100fa565b366100fa57336001600160a01b03167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534476040516100f092919061109b565b60405180910390a2005b600080fd5b34801561010b57600080fd5b5061011f61011a366004610ca5565b610281565b60405161012c9190610e01565b60405180910390f35b34801561014157600080fd5b50610155610150366004610ca5565b6102ab565b005b34801561016357600080fd5b5061016c61042f565b60405161012c9190611071565b34801561018557600080fd5b50610199610194366004610ca5565b610435565b60405161012c959493929190610e15565b3480156101b657600080fd5b506101ca6101c5366004610bc7565b61053e565b60405161012c9190610e9e565b3480156101e357600080fd5b506101ca6101f2366004610cbd565b610553565b34801561020357600080fd5b5061020c610573565b60405161012c9190610e51565b610155610227366004610be8565b6105d5565b34801561023857600080fd5b50610155610247366004610ce8565b6107b4565b34801561025857600080fd5b5061016c610960565b34801561026d57600080fd5b5061015561027c366004610ca5565b610966565b6001818154811061029157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff166102e35760405162461bcd60e51b81526004016102da90610ea9565b60405180910390fd5b600554819081106103065760405162461bcd60e51b81526004016102da90610ef0565b816005818154811061032857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff161561035c5760405162461bcd60e51b81526004016102da90610f95565b60006005848154811061037f57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526004825260408085203386529092529220546005909102909101915060ff166103c75760405162461bcd60e51b81526004016102da90610fcc565b60018160040160008282546103dc91906110cd565b90915550506000848152600460209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60055490565b600080606060008060006005878154811061046057634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104aa906110e4565b80601f01602080910402602001604051908101604052809291908181526020018280546104d6906110e4565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b50505050509250955095509550955095505091939590929450565b60026020526000908152604090205460ff1681565b600460209081526000928352604080842090915290825290205460ff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156105cb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ad575b5050505050905090565b3360009081526002602052604090205460ff166106045760405162461bcd60e51b81526004016102da90610ea9565b600260005414156106275760405162461bcd60e51b81526004016102da90611003565b60026000558115610651578134146106515760405162461bcd60e51b81526004016102da90610f5e565b600580546040805160a0810182526001600160a01b03878116825260208083018881529383018781526000606085018190526080850181905260018701885587905283517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0978702978801805473ffffffffffffffffffffffffffffffffffffffff19169190941617835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18701559251805194959294919361073b937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db20192910190610b12565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906107a1908890889061107a565b60405180910390a4505060016000555050565b3360009081526002602052604090205460ff166107e35760405162461bcd60e51b81526004016102da90610ea9565b600554829081106108065760405162461bcd60e51b81526004016102da90610ef0565b826005818154811061082857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff161561085c5760405162461bcd60e51b81526004016102da90610f95565b6000848152600460209081526040808320338452909152902054849060ff16156108985760405162461bcd60e51b81526004016102da90610f27565b6000600586815481106108bb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832089845260048083526040808620338752909352918420805460ff1916600190811790915560059093020190810180549194509192906109059084906110b5565b9091555050604051869033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a360035481600401541015801561094a5750845b156109585761095886610972565b505050505050565b60035481565b61096f81610972565b50565b600554819081106109955760405162461bcd60e51b81526004016102da90610ef0565b81600581815481106109b757634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156109eb5760405162461bcd60e51b81526004016102da90610f95565b600060058481548110610a0e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905060035481600401541015610a445760405162461bcd60e51b81526004016102da9061103a565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610a7b906002860190610d66565b60006040518083038185875af1925050503d8060008114610ab8576040519150601f19603f3d011682016040523d82523d6000602084013e610abd565b606091505b5050905080610ade5760405162461bcd60e51b81526004016102da90610ecd565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b828054610b1e906110e4565b90600052602060002090601f016020900481019282610b405760008555610b86565b82601f10610b5957805160ff1916838001178555610b86565b82800160010185558215610b86579182015b82811115610b86578251825591602001919060010190610b6b565b50610b92929150610b96565b5090565b5b80821115610b925760008155600101610b97565b80356001600160a01b0381168114610bc257600080fd5b919050565b600060208284031215610bd8578081fd5b610be182610bab565b9392505050565b600080600060608486031215610bfc578182fd5b610c0584610bab565b92506020808501359250604085013567ffffffffffffffff80821115610c29578384fd5b818701915087601f830112610c3c578384fd5b813581811115610c4e57610c4e611135565b604051601f8201601f1916810185018381118282101715610c7157610c71611135565b60405281815283820185018a1015610c87578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610cb6578081fd5b5035919050565b60008060408385031215610ccf578182fd5b82359150610cdf60208401610bab565b90509250929050565b60008060408385031215610cfa578182fd5b8235915060208301358015158114610d10578182fd5b809150509250929050565b60008151808452815b81811015610d4057602081850181015186830182015201610d24565b81811115610d515782602083870101525b50601f01601f19169290920160200192915050565b8154600090819060028104600180831680610d8257607f831692505b6020808410821415610da257634e487b7160e01b87526022600452602487fd5b818015610db65760018114610dc757610df3565b60ff19861689528489019650610df3565b610dd08a6110a9565b885b86811015610deb5781548b820152908501908301610dd2565b505084890196505b509498975050505050505050565b6001600160a01b0391909116815260200190565b60006001600160a01b038716825285602083015260a06040830152610e3d60a0830186610d1b565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610e925783516001600160a01b031683529284019291840191600101610e6d565b50909695505050505050565b901515815260200190565b6020808252600a90820152693737ba1039b4b3b732b960b11b604082015260600190565b6020808252600990820152681d1e0819985a5b195960ba1b604082015260600190565b60208082526011908201527f747820646f6573206e6f74206578697374000000000000000000000000000000604082015260600190565b60208082526014908201527f747820616c726561647920636f6e6669726d6564000000000000000000000000604082015260600190565b60208082526011908201527f53686f756c642073656e642076616c7565000000000000000000000000000000604082015260600190565b60208082526013908201527f747820616c726561647920657865637574656400000000000000000000000000604082015260600190565b60208082526010908201527f7478206e6f7420636f6e6669726d656400000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526011908201527f63616e6e6f742065786563757465207478000000000000000000000000000000604082015260600190565b90815260200190565b6000838252604060208301526110936040830184610d1b565b949350505050565b918252602082015260400190565b60009081526020902090565b600082198211156110c8576110c861111f565b500190565b6000828210156110df576110df61111f565b500390565b6002810460018216806110f857607f821691505b6020821081141561111957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220855c99f5ccd719189d433072b61d70ae8889cb0e377e8d3da1ccfefa84a9289364736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100b05760003560e01c806380f59a6511610074578063c6a725d81161004e578063c6a725d81461022c578063d0549b851461024c578063ee22610b14610261576100fa565b806380f59a65146101d757806394cf795e146101f7578063c642747414610219576100fa565b80632079fb9a146100ff57806320ea8d86146101355780632e7700f01461015757806333ea3dc8146101795780637df73e27146101aa576100fa565b366100fa57336001600160a01b03167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534476040516100f092919061109b565b60405180910390a2005b600080fd5b34801561010b57600080fd5b5061011f61011a366004610ca5565b610281565b60405161012c9190610e01565b60405180910390f35b34801561014157600080fd5b50610155610150366004610ca5565b6102ab565b005b34801561016357600080fd5b5061016c61042f565b60405161012c9190611071565b34801561018557600080fd5b50610199610194366004610ca5565b610435565b60405161012c959493929190610e15565b3480156101b657600080fd5b506101ca6101c5366004610bc7565b61053e565b60405161012c9190610e9e565b3480156101e357600080fd5b506101ca6101f2366004610cbd565b610553565b34801561020357600080fd5b5061020c610573565b60405161012c9190610e51565b610155610227366004610be8565b6105d5565b34801561023857600080fd5b50610155610247366004610ce8565b6107b4565b34801561025857600080fd5b5061016c610960565b34801561026d57600080fd5b5061015561027c366004610ca5565b610966565b6001818154811061029157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff166102e35760405162461bcd60e51b81526004016102da90610ea9565b60405180910390fd5b600554819081106103065760405162461bcd60e51b81526004016102da90610ef0565b816005818154811061032857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff161561035c5760405162461bcd60e51b81526004016102da90610f95565b60006005848154811061037f57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526004825260408085203386529092529220546005909102909101915060ff166103c75760405162461bcd60e51b81526004016102da90610fcc565b60018160040160008282546103dc91906110cd565b90915550506000848152600460209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60055490565b600080606060008060006005878154811061046057634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104aa906110e4565b80601f01602080910402602001604051908101604052809291908181526020018280546104d6906110e4565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b50505050509250955095509550955095505091939590929450565b60026020526000908152604090205460ff1681565b600460209081526000928352604080842090915290825290205460ff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156105cb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ad575b5050505050905090565b3360009081526002602052604090205460ff166106045760405162461bcd60e51b81526004016102da90610ea9565b600260005414156106275760405162461bcd60e51b81526004016102da90611003565b60026000558115610651578134146106515760405162461bcd60e51b81526004016102da90610f5e565b600580546040805160a0810182526001600160a01b03878116825260208083018881529383018781526000606085018190526080850181905260018701885587905283517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0978702978801805473ffffffffffffffffffffffffffffffffffffffff19169190941617835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db18701559251805194959294919361073b937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db20192910190610b12565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906107a1908890889061107a565b60405180910390a4505060016000555050565b3360009081526002602052604090205460ff166107e35760405162461bcd60e51b81526004016102da90610ea9565b600554829081106108065760405162461bcd60e51b81526004016102da90610ef0565b826005818154811061082857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff161561085c5760405162461bcd60e51b81526004016102da90610f95565b6000848152600460209081526040808320338452909152902054849060ff16156108985760405162461bcd60e51b81526004016102da90610f27565b6000600586815481106108bb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832089845260048083526040808620338752909352918420805460ff1916600190811790915560059093020190810180549194509192906109059084906110b5565b9091555050604051869033907f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004190600090a360035481600401541015801561094a5750845b156109585761095886610972565b505050505050565b60035481565b61096f81610972565b50565b600554819081106109955760405162461bcd60e51b81526004016102da90610ef0565b81600581815481106109b757634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156109eb5760405162461bcd60e51b81526004016102da90610f95565b600060058481548110610a0e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905060035481600401541015610a445760405162461bcd60e51b81526004016102da9061103a565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610a7b906002860190610d66565b60006040518083038185875af1925050503d8060008114610ab8576040519150601f19603f3d011682016040523d82523d6000602084013e610abd565b606091505b5050905080610ade5760405162461bcd60e51b81526004016102da90610ecd565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b828054610b1e906110e4565b90600052602060002090601f016020900481019282610b405760008555610b86565b82601f10610b5957805160ff1916838001178555610b86565b82800160010185558215610b86579182015b82811115610b86578251825591602001919060010190610b6b565b50610b92929150610b96565b5090565b5b80821115610b925760008155600101610b97565b80356001600160a01b0381168114610bc257600080fd5b919050565b600060208284031215610bd8578081fd5b610be182610bab565b9392505050565b600080600060608486031215610bfc578182fd5b610c0584610bab565b92506020808501359250604085013567ffffffffffffffff80821115610c29578384fd5b818701915087601f830112610c3c578384fd5b813581811115610c4e57610c4e611135565b604051601f8201601f1916810185018381118282101715610c7157610c71611135565b60405281815283820185018a1015610c87578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610cb6578081fd5b5035919050565b60008060408385031215610ccf578182fd5b82359150610cdf60208401610bab565b90509250929050565b60008060408385031215610cfa578182fd5b8235915060208301358015158114610d10578182fd5b809150509250929050565b60008151808452815b81811015610d4057602081850181015186830182015201610d24565b81811115610d515782602083870101525b50601f01601f19169290920160200192915050565b8154600090819060028104600180831680610d8257607f831692505b6020808410821415610da257634e487b7160e01b87526022600452602487fd5b818015610db65760018114610dc757610df3565b60ff19861689528489019650610df3565b610dd08a6110a9565b885b86811015610deb5781548b820152908501908301610dd2565b505084890196505b509498975050505050505050565b6001600160a01b0391909116815260200190565b60006001600160a01b038716825285602083015260a06040830152610e3d60a0830186610d1b565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610e925783516001600160a01b031683529284019291840191600101610e6d565b50909695505050505050565b901515815260200190565b6020808252600a90820152693737ba1039b4b3b732b960b11b604082015260600190565b6020808252600990820152681d1e0819985a5b195960ba1b604082015260600190565b60208082526011908201527f747820646f6573206e6f74206578697374000000000000000000000000000000604082015260600190565b60208082526014908201527f747820616c726561647920636f6e6669726d6564000000000000000000000000604082015260600190565b60208082526011908201527f53686f756c642073656e642076616c7565000000000000000000000000000000604082015260600190565b60208082526013908201527f747820616c726561647920657865637574656400000000000000000000000000604082015260600190565b60208082526010908201527f7478206e6f7420636f6e6669726d656400000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526011908201527f63616e6e6f742065786563757465207478000000000000000000000000000000604082015260600190565b90815260200190565b6000838252604060208301526110936040830184610d1b565b949350505050565b918252602082015260400190565b60009081526020902090565b600082198211156110c8576110c861111f565b500190565b6000828210156110df576110df61111f565b500390565b6002810460018216806110f857607f821691505b6020821081141561111957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220855c99f5ccd719189d433072b61d70ae8889cb0e377e8d3da1ccfefa84a9289364736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeTransaction(uint256)": {
        "details": "We did not add onlySigner modifier here, because we want to allow any community member to execute transaction which had got at least minimum number of confirmations"
      },
      "submitTransaction(address,uint256,bytes)": {
        "details": "when buying is failed, agent should send loan again to TribeOne."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 647,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2476,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "signers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2480,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "isSigner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2482,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "numConfirmationsRequired",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2499,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "isConfirmed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 2503,
        "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(Transaction)2493_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Transaction)2493_storage)dyn_storage": {
        "base": "t_struct(Transaction)2493_storage",
        "encoding": "dynamic_array",
        "label": "struct MultiSigWallet.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_struct(Transaction)2493_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 2484,
            "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2486,
            "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2488,
            "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 2490,
            "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 2492,
            "contract": "contracts/libs/MultiSigWallet.sol:MultiSigWallet",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}